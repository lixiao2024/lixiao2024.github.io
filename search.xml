<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>超算简介</title>
      <link href="/2024/05/29/%E8%B6%85%E7%AE%97%E7%AE%80%E4%BB%8B/"/>
      <url>/2024/05/29/%E8%B6%85%E7%AE%97%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是超级计算技术？"><a href="#什么是超级计算技术？" class="headerlink" title="什么是超级计算技术？"></a>什么是超级计算技术？</h1><p>超级计算技术包括超级计算机，世界上最快的计算机。 超级计算机由互连、输入&#x2F;输出系统、内存和处理器核心组成。</p><p>不同于传统的计算机，超级计算机使用多个中央处理器 (CPU)。 这些 CPU 分组成多个计算节点，包含一个处理器或一组处理器（对称多处理 (SMP)）和一个内存块。 在规模上，超级计算机可以包含数万个节点。 凭借互连通信能力，这些节点可以协作解决特定问题。 节点也使用互连功能与输入&#x2F;输出系统通信，比如<a href="https://www.ibm.com/cn-zh/topics/data-storage">数据存储</a> 和<a href="https://www.ibm.com/cn-zh/cloud/learn/networking-a-complete-guide">联网</a>。</p><p>需要注意的一点是，由于现代超级计算机的功耗，数据中心需要冷却系统和合适的设施来容纳所有的这些设备。</p><hr><h1 id="超级计算有什么用？"><a href="#超级计算有什么用？" class="headerlink" title="超级计算有什么用？"></a>超级计算有什么用？</h1><p>医疗方向：机器学习算法将帮助医学研究人员全面了解美国抗癌人患者的详细情况。当然巨大的算力，也就意味着超级计算有着举足轻重的地位。<a href="https://www.ibm.com/blogs/research/2019/07/ai-tools-for-cancer-research/">对抗癌症</a><br>识别下一代材料：深度学习可以帮助科学家识别更好的电池材料，更具弹性的建筑材料和更搞笑的半导体材料。<a href="https://research.ibm.com/blog/ibm-molecule-generation-experience">识别下一代材料</a><br>了解疾病类型：通过混合使用人工智能技术，研究人员将确定人类蛋白质和细胞系统的功能、合作和进化模式。<a href="https://newsroom.ibm.com/IBM-helps-bring-supercomputers-into-the-global-fight-against-COVID-19">了解疾病类型</a></p><hr><h1 id="超级计算和人工智能"><a href="#超级计算和人工智能" class="headerlink" title="超级计算和人工智能"></a>超级计算和人工智能</h1><p>因为超级计算机经常用来运行<a href="https://www.ibm.com/cn-zh/cloud/learn/what-is-artificial-intelligence">人工智能</a> 程序，所以超级计算已经成为人工智能的代名词。 这种常规的用法是因为人工智能程序需要超计算机提供的高性能计算。 换言之，超级计算机可以处理人工智能应用程序通常需要的工作负载类型。</p><p>IBM 专门针对大数据和人工智能工作负载构建了 <a href="https://www.ibm.com/thought-leadership/summit-supercomputer/">Summit 和 Sierra 超级计算机</a> 。 它们将帮助我们模拟超新星，开拓新材料，探索癌症治疗、遗传学与环境 - 利用面向所有业务领域的技术。</p><hr><p>超级计算有多快？</p><p>超级计算以每秒浮点运算次数 (FLOPS) 衡量。 Petaflops 是计算机处理速度的一种度量单位，等同于每秒千万亿次浮点运算。 速度为 1 petaflop 的计算机系统每秒可以执行百万的四次方次浮点运算 (1015)。 从另一个角度来说，超级计算机的处理能力比最快的笔记本电脑高出一百万倍。  </p><p>最快的超级计算机是什么？</p><p>根据 <a href="https://www.top500.org/lists/top500/2021/06/">500 强名单</a> （链接位于 ibm.com 外部），世界上最快的超级计算机是日本的 Fugaku，截至 2021 年 6 月统计的速度是 442 petaflop。 IBM 超级计算机 Summit 和 Sierra 分别位列第二名和第三名，速度分别是 148.8 和 94.6 petaflop。 Summit 位于橡树岭国家实验室，这是美国能源部在田纳西州设立的设施。 Sierra 位于加利福尼亚州的劳伦斯利弗莫尔国家实验室。</p><p>为了清楚地认识现在的速度，1976 年在洛斯阿拉莫斯国家实验室安装 Cray-1 时，它的速度能达到约 160 megaflop。 1 megaflop 可以执行一百万次 (106) 浮点运算。</p><hr><h1 id="超级计算与……"><a href="#超级计算与……" class="headerlink" title="超级计算与……"></a>超级计算与……</h1><p>超级计算一词有时用于指代其他类型的计算。 但是其他时候，这些同义词可能会令人困惑。 为了阐明计算类型之间的一些异同，下面介绍一些常见的比较。  </p><h2 id="超级计算与高性能计算"><a href="#超级计算与高性能计算" class="headerlink" title="超级计算与高性能计算"></a>超级计算与高性能计算</h2><p>超级计算通常是指超级计算机使用的复杂的大型计算过程，而<a href="https://www.ibm.com/cn-zh/topics/hpc">高性能计算</a>（HPC）是指使用多台超级计算机来处理复杂的大型计算。 这两个术语经常互换使用。</p><h2 id="超级计算与并行计算"><a href="#超级计算与并行计算" class="headerlink" title="超级计算与并行计算"></a>超级计算与并行计算</h2><p>超级计算机有时也被称为并行计算机，因为超级计算机可以使用并行处理。 并行处理是指多个 CPU 在给定时间共同对单个计算求解。 然而，HPC 场景也使用并行性，但不一定使用超级计算机。</p><p>另一个例外是，超级计算机可以使用其他处理器系统，例如向量处理器、标量处理器或多线程处理器。</p><p><a href="https://www.ibm.com/quantum-computing">量子计算</a>是一种计算模型，它利用量子力学定律来处理数据，根据概率执行计算。 它旨在解决世界上最强大的超级计算机无法且永远不会解决的复杂问题。</p><hr><h1 id="超级计算的历史"><a href="#超级计算的历史" class="headerlink" title="超级计算的历史"></a>超级计算的历史</h1><h2 id="超级计算是什么时候出现的？"><a href="#超级计算是什么时候出现的？" class="headerlink" title="超级计算是什么时候出现的？"></a>超级计算是什么时候出现的？</h2><p>超级计算已有多年的发展历史。20 世纪 40 年代，当巨人计算机被运到布莱切利园并正式开始使用时，超级计算就诞生了。 巨人计算机是第一台具有一定功能的电子数字计算机，由邮政总局 (GPO) 研究电话工程师 Tommy Flowers 设计。</p><h2 id="超级计算机最早是什么时候发明的？"><a href="#超级计算机最早是什么时候发明的？" class="headerlink" title="超级计算机最早是什么时候发明的？"></a>超级计算机最早是什么时候发明的？</h2><p><em>超级计算机</em> 一词最早是在 20 世纪 60 年代初开始使用，当时 IBM 推出了 IBM 7030 Stretch，同时 Sperry Rand 公开了 UNIVAC LARC，这是最早的两台专门的超级计算机，其功能远远超过当时最快的商用电脑。 真正影响超级计算机发展进程的事件是 20 世纪 50 年代末美国政府开始定期拨款，资助开发前沿的高性能计算机技术以用于军事应用。</p><p>尽管超级计算机最初生产数量有限，并且仅为政府所用，但这项逐渐进步的技术最终在工业和商业主流中找到了用武之地。 例如，Control Data Corporation (CDC) 和 Cray Research 这两家美国公司从六十年代中期到七十年代末期，一直领导着商业超级计算机行业。 由 Seymour Cray 设计的 CDC 6600 被认为是第一台成功的商用超级计算机。 IBM 后来居上，从 20 世纪 90 年代到今天一直是商业行业的领导者。</p><h1 id="太湖之光"><a href="#太湖之光" class="headerlink" title="太湖之光"></a>太湖之光</h1><h2 id="研发背景"><a href="#研发背景" class="headerlink" title="研发背景"></a>研发背景</h2><p>超级计算机，被称为“国之重器”，超级计算属于战略高技术领域，是世界各国竞相角逐的科技制高点，也是一个国家科技实力的重要标志之一 [3]。</p><p>神威·太湖之光超级计算机作为国家863计划信息技术领域重大项目支持的课题之一，2014年由科技部立项，科技部的要求是建成全球一流的超级计算机和全球一流的超算中心 [4-5]。</p><h2 id="组成结构"><a href="#组成结构" class="headerlink" title="组成结构"></a>组成结构</h2><p><img src="/img/529-1.webp" alt="Lena"></p><p align="center">内部构造</p>神威·太湖之光超级计算机由40个运算机柜和8个[网络机柜](https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%9C%BA%E6%9F%9C/1857102?fromModule=lemma_inlink)组成。每个运算机柜比家用的双门冰箱略大，打开柜门，4块由32块运算插件组成的超节点分布其中。每个插件由4个运算节点板组成，一个运算节点板又含2块“[申威26010](https://baike.baidu.com/item/%E7%94%B3%E5%A8%8126010/0?fromModule=lemma_inlink)”高性能处理器。一台机柜就有1024块[处理器](https://baike.baidu.com/item/%E5%A4%84%E7%90%86%E5%99%A8/914419?fromModule=lemma_inlink)，整台“神威·太湖之光”共有40960块处理器 [6]。<hr><h2 id="主要性能"><a href="#主要性能" class="headerlink" title="主要性能"></a>主要性能</h2><p>1.峰值性能12.5亿亿次每秒 [19]</p><p>2.持续性能9.3亿亿次每秒 [19]</p><p>3.性能功耗比6051MFlops&#x2F;W [6]</p><h2 id="世界排名"><a href="#世界排名" class="headerlink" title="世界排名"></a>世界排名</h2><p>2016年6月20日，德国法兰克福国际超算大会（ISC）公布了新一期全球超级计算机TOP500榜单，由国家并行计算机工程技术研究中心研制的“神威·太湖之光”以超第二名近三倍的运算速度夺得第一 [6]。</p><p>2016年11月14日，新一期全球超级计算机500强（TOP500）榜单，中国“神威·太湖之光”以较大的运算速度优势轻松蝉联冠军。算上此前“<a href="https://baike.baidu.com/item/%E5%A4%A9%E6%B2%B3%E4%BA%8C%E5%8F%B7/0?fromModule=lemma_inlink">天河二号</a>”的六连冠，中国已连续4年占据全球超算排行榜的最高席位 [7]。</p><p>2017年6月19日，在德国法兰克福召开的I SC2017国际高性能计算大会上，“神威·太湖之光”超级计算机以每秒12.54亿亿次的峰值计算能力以及每秒9.3亿亿次的持续计算能力，再次斩获世界超级计算机排名榜单TOP500第一名 [8]。</p><p>2017年11月13日，新一期全球超级计算机500强榜单发布，中国超级计算机“神威·太湖之光”和“天河二号”连续第四次分列冠亚军，且中国超级计算机上榜总数又一次反超美国，夺得第一 [9]。</p><p>2018年11月12日，新一期全球超级计算机500强榜单在美国达拉斯发布，中国超算“神威·太湖之光”位列第三名 [10]。</p><p>2020年6月，全球超级计算机Top500榜单公布，神威·太湖之光排名第四 [11]。</p><p>2021年，最新一期的全球超级计算机500强榜单公布，中国超级计算机“神威·太湖之光”，本次排名第四位。 [16]</p><p>2023年，最新的全球超级计算机500强榜单公布，中国超级计算机“神威·太湖之光”，本次排名第七位。</p><hr><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>以<a href="https://baike.baidu.com/item/%E6%B8%85%E5%8D%8E%E5%A4%A7%E5%AD%A6/111764?fromModule=lemma_inlink">清华大学</a>为主体的科研团队首次实现了百万核规模的全球10公里高分辨率地球系统数值模拟，将全面提高中国应对极端气候和自然灾害的减灾防灾能力；<a href="https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E8%AE%A1%E7%AE%97%E6%B5%81%E4%BD%93%E5%8A%9B%E5%AD%A6%E5%AE%9E%E9%AA%8C%E5%AE%A4/0?fromModule=lemma_inlink">国家计算流体力学实验室</a>对“<a href="https://baike.baidu.com/item/%E5%A4%A9%E5%AE%AB%E4%B8%80%E5%8F%B7/0?fromModule=lemma_inlink">天宫一号</a>”返回路径的数值模拟将为“<a href="https://baike.baidu.com/item/%E5%A4%A9%E5%AE%AB%E4%B8%80%E5%8F%B7/0?fromModule=lemma_inlink">天宫一号</a>”顺利回家提供精确预测；上海药物所开展的药物筛选和疾病机理研究，大大加速了白血病、<a href="https://baike.baidu.com/item/%E7%99%8C%E7%97%87/151056?fromModule=lemma_inlink">癌症</a>、<a href="https://baike.baidu.com/item/%E7%A6%BD%E6%B5%81%E6%84%9F/233181?fromModule=lemma_inlink">禽流感</a>等方向的药物设计进度 [6]。</p><p><img src="/img/529-2.webp" alt="Lena"></p><p align="center">戈登贝尔奖获奖</p>2016年11月18日凌晨4：20时许（北京时间），2016年度“戈登·贝尔”奖的谜底终于在美国[盐湖城](https://baike.baidu.com/item/%E7%9B%90%E6%B9%96%E5%9F%8E/8808871?fromModule=lemma_inlink)举行的[国际超算大会](https://baike.baidu.com/item/%E5%9B%BD%E9%99%85%E8%B6%85%E7%AE%97%E5%A4%A7%E4%BC%9A/0?fromModule=lemma_inlink)（SC16）上揭晓。[中科院软件所](https://baike.baidu.com/item/%E4%B8%AD%E7%A7%91%E9%99%A2%E8%BD%AF%E4%BB%B6%E6%89%80/0?fromModule=lemma_inlink)杨超研究员与清华大学副教授[薛巍](https://baike.baidu.com/item/%E8%96%9B%E5%B7%8D/13884453?fromModule=lemma_inlink)、[付昊桓](https://baike.baidu.com/item/%E4%BB%98%E6%98%8A%E6%A1%93/0?fromModule=lemma_inlink)等人联合北师大组成的研究团队凭借在“神威·太湖之光”上运行的“全球大气非静力云分辨模拟”应用一举摘得该项锦标。此次全球共有6项应用成果入围“戈登·贝尔”奖最终提名，其中3项都是依托“神威·太湖之光”完成的。其余2项应用分别为[国家海洋局](https://baike.baidu.com/item/%E5%9B%BD%E5%AE%B6%E6%B5%B7%E6%B4%8B%E5%B1%80/9930877?fromModule=lemma_inlink)海洋一所与[清华大学](https://baike.baidu.com/item/%E6%B8%85%E5%8D%8E%E5%A4%A7%E5%AD%A6/111764?fromModule=lemma_inlink)合作的“高分辨率海浪数值模拟”和[中科院网络中心](https://baike.baidu.com/item/%E4%B8%AD%E7%A7%91%E9%99%A2%E7%BD%91%E7%BB%9C%E4%B8%AD%E5%BF%83/5912200?fromModule=lemma_inlink)的“[钛合金](https://baike.baidu.com/item/%E9%92%9B%E5%90%88%E9%87%91/1170982?fromModule=lemma_inlink)微结构演化相场模拟” [12]。]]></content>
      
      
      
        <tags>
            
            <tag> 专业前沿 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo框架原理</title>
      <link href="/2024/05/28/hexo%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86/"/>
      <url>/2024/05/28/hexo%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>随着<a href="https://cloud.baidu.com/product/et.html">网络</a>技术的不断发展，博客作为一种重要的信息发布和交流方式，受到了越来越多人的青睐。Hexo是一款基于Node.js的博客框架，具有快速、简单、强大等特点，成为了许多博客爱好者的首选。那么，Hexo是如何实现这些功能的呢？本文将详细解析Hexo的底层原理，帮助读者更好地理解Hexo，并掌握如何使用Hexo搭建自己的博客。</p><h1 id="Hexo的目录结构"><a href="#Hexo的目录结构" class="headerlink" title="Hexo的目录结构"></a>Hexo的目录结构</h1><p>Hexo的目录结构清晰简洁，易于理解和管理。Hexo的根目录下主要包含以下几个文件夹：</p><ul><li>source：存放博客文章的源文件，即用户编写的博文都放在该目录下,每个文章都是一个独立的Markdown文件，文件名即为文章的URL。下面我们介绍几个子目录分别看一下</li></ul><ol><li>_post，用于存放博文，基本上每篇文章都是由 Markdown 语法编写的。</li><li>tags，存放 tag 的文件。hexo 中的 tags 是自动生成的，所以我们不用手动修改 tags 目录下的 index.md 文件，在发布时它会自动生成。</li><li>categories，存放<strong>分类</strong>。它与 tags 是类似的，也是自动生成的，所以不需要我们手工修改。</li></ol><ul><li>themes：存放Hexo的主题文件，Hexo支持自定义主题，用户可以根据自己的喜好选择或开发主题。</li><li>plugins：存放Hexo的插件文件，Hexo提供了丰富的插件生态，用户可以根据自己的需求安装插件来扩展Hexo的功能。</li><li>public：存放Hexo生成的静态文件，包括HTML、CSS、JavaScript等，这些文件可以直接被Web服务器解析并展示给用户。</li></ul><h1 id="Hexo的配置文件"><a href="#Hexo的配置文件" class="headerlink" title="Hexo的配置文件"></a>Hexo的配置文件</h1><p>Hexo的配置文件是_config.yml，该文件位于Hexo的根目录下。_config.yml文件是一个YAML格式的文件，用于配置Hexo的各项参数，如站点名称、站点URL、主题、插件等。Hexo在生成静态文件时，会根据_config.yml文件中的配置信息来生成相应的HTML文件。</p><h1 id="Hexo的主题和插件机制"><a href="#Hexo的主题和插件机制" class="headerlink" title="Hexo的主题和插件机制"></a>Hexo的主题和插件机制</h1><p>Hexo的主题和插件机制是Hexo强大的功能之一。Hexo支持自定义主题，用户可以通过修改主题文件来改变博客的外观和布局。Hexo的主题文件主要包括layout、source和template三个文件夹，分别用于存放布局文件、源文件和模板文件。</p><p>除了主题，Hexo还提供了丰富的插件生态。用户可以根据自己的需求安装插件来扩展Hexo的功能，如添加评论功能、搜索功能、统计功能等。Hexo的插件机制使得Hexo具有极高的可扩展性，用户可以根据自己的需求来定制自己的博客。</p><h1 id="Hexo的工作流程"><a href="#Hexo的工作流程" class="headerlink" title="Hexo的工作流程"></a>Hexo的工作流程</h1><p>Hexo的工作流程可以分为以下几个步骤：</p><ol><li>编写Markdown格式的博客文章，保存到source文件夹中。</li><li>根据_config.yml文件中的配置信息，Hexo会解析Markdown文件，并将其转换为HTML文件。而生成html的步骤也并非一步完成，首先是将Markdown程序转换为以下JSON对象：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">article<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  title<span class="punctuation">:</span></span><br><span class="line">  date<span class="punctuation">:</span></span><br><span class="line">  tags<span class="punctuation">:</span></span><br><span class="line">  categories<span class="punctuation">:</span></span><br><span class="line">  content<span class="punctuation">:</span></span><br><span class="line">  ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>然后根据上面生成的JSON对象生成HTML页面</li><li>Hexo会根据当前启用的主题，将生成的HTML文件渲染成最终的网页。</li><li>Hexo将生成的静态文件保存到public文件夹中，用户可以将public文件夹中的内容部署到Web服务器上，供用户访问。</li></ol><p>下面我们再来看看 <strong>hexo</strong> 的组成，它由三部分组成: <strong>hexo-cli</strong>、<strong>hexo-core</strong> 以及 <strong>hexo plugs</strong>。在这三部分中最核心的是 hexo-core 模块，它的作用就是执行上面讲的两步转换，从而生成目标文件；hexo-cli 为我们供了一些非常方便的命令。当我们敲入命令时，它会根据命令调用不同的模块；hexo plugin 是 hexo 的扩展，当 hexo 本身不能完成某项任务时，它允许你自己开发一个插件来完成。当然你也可以使用其它人写好的插件。</p><h1 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h1><p><strong>hexo</strong> 提供了几个常用命令，如<code>hexo clean</code>、<code>hexo g</code>、<code>hexo s</code>等等。下面我们分别看一下这几个命令的具体作用是什么：</p><ul><li><p>hexo clean: 删除 hexo 生成的所有文档。当我们执行这个命令后，你会发现 public 目录被删除了。</p></li><li><p>hexo g: 根据 source 目录中的文件生成 html 等可以发布的文件。</p></li><li><p>hexo s: 在本地起动 <strong>http</strong> 服务，将生成的 html 等输出文件布署到本地服务器上。</p></li><li><p>hexo d: 将生成的 html 代码推送到 github 上</p></li><li><p>hexo n “新的文章标题” ：生成一篇框架完整的新的markdown文件</p></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>Hexo作为一个基于Node.js的博客框架，具有快速、简单、强大等特点。通过深入了解Hexo的底层原理，我们可以更好地理解Hexo的工作原理，并掌握如何使用Hexo搭建自己的博客。同时，Hexo的主题和插件机制也为我们提供了丰富的定制选项，使得我们可以根据自己的需求来定制自己的博客。希望本文能够帮助读者更好地理解Hexo，并激发大家使用Hexo搭建博客的热情。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web3介绍</title>
      <link href="/2024/05/22/Web3%E4%BB%8B%E7%BB%8D/"/>
      <url>/2024/05/22/Web3%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="Web3-简介"><a href="#Web3-简介" class="headerlink" title="Web3 简介"></a>Web3 简介</h1><p>集中化帮助数十亿人接入万维网，并创建了万维网赖以生存的稳定、强大的基础设施。 与此同时，少数中心化实体在万维网的大片地区拥有据点，单方面决定什么应该被允许，什么不应该被允许。</p><p>Web3 就是这个困境的答案。 Web3 不是由大型科技公司垄断的 Web，而是拥抱去中心化，并由其用户构建、运营和拥有。 Web3 将权力交给个人而不是公司。<br>在讨论 Web3 之前，让我们先探讨一下我们是如何走到这一步的。</p><Divider /><h2 id="早期的网络"><a href="#早期的网络" class="headerlink" title="早期的网络"></a>早期的网络</h2><p>大多数人认为网络是现代生活的一个持续的支柱——它被发明并从那时起就存在了。 然而，我们大多数人今天所知道的网络与最初想象的有很大不同。 为了更好地理解这一点，将 Web 的短暂历史分为松散的时期（Web 1.0 和 Web 2.0）会很有帮助。</p><h3 id="Web-1-0：只读（1990-2004"><a href="#Web-1-0：只读（1990-2004" class="headerlink" title="Web 1.0：只读（1990-2004)"></a>Web 1.0：只读（1990-2004)</h3><p>1989 年，在日内瓦欧洲核子研究组织 (CERN)，蒂姆·伯纳斯·李 (Tim Berners-Lee) 正忙于开发后来成为万维网的协议。 他的想法？ 创建开放、去中心化的协议，允许在地球上任何地方共享信息。</p><p>伯纳斯-李的第一次创作，现在被称为“Web 1.0”，大约发生在 1990 年至 2004 年之间。Web 1.0 主要是公司拥有的静态网站，用户之间几乎为零互动——个人很少制作内容——导致 它被称为只读网络。</p><p><img src="/img/Web1.png" alt="Lena"></p><p align="center">客户端-服务器架构，代表Web 1.0</p><h3 id="Web-2-0：读写（2004-年至今）"><a href="#Web-2-0：读写（2004-年至今）" class="headerlink" title="Web 2.0：读写（2004 年至今）"></a>Web 2.0：读写（2004 年至今）</h3><p>随着社交媒体平台的出现，Web 2.0 时期开始于 2004 年。 网络不再是只读的，而是变成了读写的。 公司不再向用户提供内容，而是开始提供平台来共享用户生成的内容并进行用户与用户的交互。 随着越来越多的人上网，少数顶级公司开始控制网络上不成比例的流量和价值。 Web 2.0 还催生了广告驱动的收入模式。 虽然用户可以创建内容，但他们并不拥有该内容或从其货币化中受益。</p><p><img src="/img/web2.png" alt="Lena"></p><p align="center">客户端-服务器架构，代表Web 2.0</p><Divider /><h2 id="Web-3-0：读写自有"><a href="#Web-3-0：读写自有" class="headerlink" title="Web 3.0：读写自有"></a>Web 3.0：读写自有</h2><p>“Web 3.0”的前提是以太坊 (Ethereum)(&#x2F;what-is-ethereum&#x2F;) 联合创始人 Gavin Wood 在 2014 年以太坊推出后不久提出的。Gavin 针对许多早期加密货币采用者所感受到的问题提出了一个解决方案： 网络需要太多的信任。 也就是说，人们今天所了解和使用的大多数网络都依赖于信任少数私营公司，它们会按照公众的最佳利益行事。</p><p><img src="/img/web33.png" alt="Lena"></p><p align="center">去中心化节点架构，代表Web3</p><Divider /><h3 id="什么是-Web3？"><a href="#什么是-Web3？" class="headerlink" title="什么是 Web3？"></a>什么是 Web3？</h3><p>Web3 已经成为一个包罗万象的术语，代表着一个新的、更好的互联网的愿景。 Web3 的核心是利用区块链、加密货币和 NFT 将权力以所有权的形式返还给用户。 <a href="https://twitter.com/himgajria/status/1266415636789334016">Twitter 上的 2020 年帖子</a> 说得最好：Web1 是只读的，Web2 是读写的，Web3 将是读写自己的。</p><h4 id="Web3-的核心思想"><a href="#Web3-的核心思想" class="headerlink" title="Web3 的核心思想"></a>Web3 的核心思想</h4><p>尽管为 Web3 提供严格的定义具有挑战性，但有一些核心原则指导其创建。</p><ul><li><strong>Web3 是去中心化的：</strong> 互联网的大片区域不是由中心化实体控制和拥有，而是所有权分布在其构建者和用户之间。</li><li><strong>Web3 是无需许可的：</strong> 每个人都有平等的机会参与 Web3，没有人会被排除在外。</li><li><strong>Web3 具有原生支付功能：</strong> 它使用加密货币进行在线支出和汇款，而不是依赖银行和支付处理器的过时基础设施。</li><li><strong>Web3 是无需信任的：</strong> 它使用激励和经济机制运行，而不是依赖可信的第三方。</li></ul><h3 id="为什么-Web3-很重要？"><a href="#为什么-Web3-很重要？" class="headerlink" title="为什么 Web3 很重要？"></a>为什么 Web3 很重要？</h3><p>尽管 Web3 的杀手级功能不是孤立的，也不适合简单的类别，但为了简单起见，我们尝试将它们分开以使它们更容易理解。</p><h4 id="所有权"><a href="#所有权" class="headerlink" title="所有权"></a>所有权</h4><p>Web3 以前所未有的方式让您拥有数字资产的所有权。 例如，假设您正在玩 web2 游戏。 如果您购买游戏内物品，它将直接与您的帐户绑定。 如果游戏创建者删除您的帐户，您将丢失这些物品。 或者，如果您停止玩游戏，您就会失去投资于游戏内物品的价值。</p><p>Web3 允许通过<a href="/glossary/#nft">不可替代代币 (NFT)</a> 实现直接所有权。 任何人，甚至游戏的创作者，都无权剥夺您的所有权。 而且，如果您停止玩游戏，您可以在公开市场上出售或交易您的游戏内物品并收回其价值。</p><InfoBanner shouldSpaceBetween emoji=":eyes:">   <div>了解有关 NFT 的更多信息</div>   <ButtonLink to="/nft/">     有关 NFT 的更多信息  </ButtonLink></InfoBanner><h4 id="审查制度抵抗"><a href="#审查制度抵抗" class="headerlink" title="审查制度抵抗"></a>审查制度抵抗</h4><p>平台和内容创作者之间的权力动态严重不平衡。</p><p>OnlyFans 是一个用户生成的成人内容网站，拥有超过 100 万内容创作者，其中许多人将该平台作为主要收入来源。 2021 年 8 月，OnlyFans 宣布计划禁止露骨色情内容。 这一消息引发了该平台创作者的愤怒，他们认为自己帮助创建的平台上的收入被剥夺了。 在强烈反对之后，这一决定很快被推翻。 尽管创作者赢得了这场战斗，但它凸显了 Web 2.0 创作者的一个问题：如果你离开一个平台，你就会失去声誉和关注度。</p><p>在 Web3 上，您的数据存储在区块链上。 当您决定离开某个平台时，您可以带走您的声誉，将其插入另一个更符合您价值观的界面。</p><p>Web 2.0 要求内容创建者信任平台不会改变规则，但抗审查性是 Web3 平台的固有功能。</p><h4 id="去中心化自治组织-DAO"><a href="#去中心化自治组织-DAO" class="headerlink" title="去中心化自治组织 (DAO)"></a>去中心化自治组织 (DAO)</h4><p>除了拥有 Web3 中的数据之外，您还可以使用类似于公司股票的代币作为一个集体拥有该平台。 DAO 可让您协调平台的去中心化所有权并对其未来做出决策。</p><p>DAO 在技术上被定义为商定的<a href="/glossary/#smart-contract">智能合约</a>，它可以在资源池（代币）上自动执行去中心化决策。 拥有代币的用户对资源的使用方式进行投票，代码自动执行投票结果。</p><p>然而，人们将许多 Web3 社区定义为 DAO。 这些社区都通过代码实现了不同程度的去中心化和自动化。 目前，我们正在探索 DAO 是什么以及它们未来如何发展。</p><InfoBanner shouldSpaceBetween emoji=":eyes:">   <div>了解有关 DAO 的更多信息</div>   <ButtonLink to="/dao/">     有关 DAO 的更多信息   </按钮链接></信息横幅><h3 id="身份"><a href="#身份" class="headerlink" title="身份"></a>身份</h3><p>传统上，您将为您使用的每个平台创建一个帐户。 例如，您可能拥有 Twitter 帐户、YouTube 帐户和 Reddit 帐户。 想要更改您的显示名称或个人资料图片吗？ 您必须在每个帐户上执行此操作。 在某些情况下，您可以使用社交登录，但这会带来一个熟悉的问题——审查制度。 只需单击一下，这些平台就可以将您锁定在整个在线生活之外。 更糟糕的是，许多平台要求您信任他们提供个人身份信息才能创建帐户。</p><p>Web3 允许您使用以太坊地址和<a href="/glossary/#ens">以太坊名称服务 (ENS)</a> 配置文件控制您的数字身份，从而解决了这些问题。 使用以太坊地址可以提供安全、抗审查和匿名的跨平台单一登录。</p><h3 id="原生支付"><a href="#原生支付" class="headerlink" title="原生支付"></a>原生支付</h3><p>Web2 的支付基础设施依赖于银行和支付处理商，不包括没有银行账户的人或恰好居住在错误国家&#x2F;地区的人。<br>Web3 使用 <a href="/glossary/#ether">ETH</a> 等代币直接在浏览器中汇款，无需受信任的第三方。</p><ButtonLink to="/eth/">   有关 ETH 的更多信息</按钮链接><h2 id="Web3-限制"><a href="#Web3-限制" class="headerlink" title="Web3 限制"></a>Web3 限制</h2><p>尽管当前形式的 Web3 有很多好处，但生态系统必须解决许多限制才能使其蓬勃发展。</p><h3 id="辅助功能"><a href="#辅助功能" class="headerlink" title="辅助功能"></a>辅助功能</h3><p>重要的 Web3 功能（例如使用以太坊登录）已经可供任何人以零成本使用。 但是，交易的相对成本仍然让许多人望而却步。 由于交易费用较高，Web3 在不太富裕的发展中国家不太可能被使用。 在以太坊上，这些挑战正在通过<a href="/roadmap/">路线图</a>和<a href="/glossary/#layer-2">第 2 层扩展解决方案</a>得到解决。 该技术已经准备就绪，但我们需要在第 2 层上进行更高水平的采用，以使每个人都可以访问 Web3。</p><h3 id="用户体验"><a href="#用户体验" class="headerlink" title="用户体验"></a>用户体验</h3><p>目前使用 Web3 的技术门槛太高。 用户必须理解安全问题，理解复杂的技术文档，并浏览不直观的用户界面。 <a href="/wallets/find-wallet/">钱包提供商</a> 特别致力于解决这个问题，但在 Web3 被大规模采用之前还需要取得更多进展。</p><h3 id="教育"><a href="#教育" class="headerlink" title="教育"></a>教育</h3><p>Web3 引入了新的范式，需要学习与 Web2.0 中使用的思维模型不同的思维模型。 20 世纪 90 年代末，随着 Web1.0 的流行，类似的教育活动也发生了。 万维网的支持者使用了大量的教育技术来教育公众，从简单的比喻（信息高速公路、浏览器、网上冲浪）到[电视广播](<a href="https://www.youtube.com/watch?v=">https://www.youtube.com/watch?v=</a> SzQLI7BxfYI)。 Web3 并不难，但它有所不同。 让 Web2 用户了解这些 Web3 范例的教育活动对于其成功至关重要。</p><h3 id="集中式基础设施"><a href="#集中式基础设施" class="headerlink" title="集中式基础设施"></a>集中式基础设施</h3><p>Web3 生态系统还很年轻并且发展迅速。 因此，它目前主要依赖于中心化基础设施（GitHub、Twitter、Discord 等）。 许多 Web3 公司都在急于填补这些空白，但构建高质量、可靠的基础设施需要时间。</p><h2 id="去中心化的未来"><a href="#去中心化的未来" class="headerlink" title="去中心化的未来"></a>去中心化的未来</h2><p>Web3 是一个年轻且不断发展的生态系统。 加文·伍德 (Gavin Wood) 在 2014 年创造了这个术语，但其中许多想法直到最近才成为现实。 仅去年一年，人们对加密货币的兴趣大幅增加，对第 2 层扩展解决方案的改进，对新治理形式的大规模实验以及数字身份的革命。</p><p>我们才刚刚开始使用 Web3 创建更好的 Web，但随着我们不断改进支持它的基础设施，Web 的未来看起来一片光明。</p><h2 id="我如何参与"><a href="#我如何参与" class="headerlink" title="我如何参与"></a>我如何参与</h2><ul><li><a href="/wallets/">Get a wallet</a></li><li><a href="/community/">Find a community</a></li><li><a href="/dapps/">Explore Web3 applications</a></li><li><a href="/dao/">Join a DAO</a></li><li><a href="/developers/">Build on Web3</a></li></ul><h2 id="进一步阅读"><a href="#进一步阅读" class="headerlink" title="进一步阅读"></a>进一步阅读</h2><p>Web3 没有严格定义。 不同的社区参与者对此有不同的看法。 这里有几个：</p><ul><li><a href="https://www.freecodecamp.org/news/what-is-web3/">What is Web3? The Decentralized Internet of the Future Explained</a> – <em>Nader Dabit</em></li><li><a href="https://medium.com/l4-media/making-sense-of-web-3-c1a9e74dcae">Making Sense of Web 3</a> – <em>Josh Stark</em></li><li><a href="https://future.a16z.com/why-web3-matters/">Why Web3 Matters</a> — <em>Chris Dixon</em></li><li><a href="https://onezero.medium.com/why-decentralization-matters-5e3f79f7638e">Why Decentralization Matters</a> - <em>Chris Dixon</em></li><li><a href="https://a16z.com/wp-content/uploads/2021/10/The-web3-Readlng-List.pdf">The Web3 Landscape</a> – <em>a16z</em></li><li><a href="https://www.notboring.co/p/the-web3-debate?s=r">The Web3 Debate</a> – <em>Packy McCormick</em></li></ul><QuizWidget quizKey="web3" />]]></content>
      
      
      
        <tags>
            
            <tag> 专业前沿 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自然语言处理NLP</title>
      <link href="/2024/05/20/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86NLP/"/>
      <url>/2024/05/20/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86NLP/</url>
      
        <content type="html"><![CDATA[<p><strong>本文旨在介绍前沿的自然语言处理技术-Bert。</strong></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a><strong>介绍</strong></h2><p><strong>2018</strong>年<strong>Google</strong>发布了<strong>BERT</strong>（来自Transformer的双向自编码器）<strong>预训练模型</strong>，旨在通过联合左侧和右侧的上下文，从未标记文本中预训练出一个深度双向表示模型。因此，BERT可以通过增加一个额外的输出层来进行微调，就可以达到为广泛的任务创建State-of-the-arts 模型的效果，比如QA、语言推理任务。</p><p>当时将预训练模应用于下游任务的<strong>策略</strong>通常有两种：<strong>基于特征的（feature-based）</strong>和<strong>基于微调（fine-tuning）</strong>；前者比如<strong>ELMo</strong><a href="https://zhuanlan.zhihu.com/p/130913995#ref_2">[2]</a>，后者比如<strong>OpenAI GPT</strong><a href="https://zhuanlan.zhihu.com/p/130913995#ref_3">[3]</a>;</p><p>这两种策略在预训练期间具有相同的目标函数，在预训练期间，它们使用单向语言模型来学习一般的语言表示。但当前对预训练方法的限制（尤其是对基于微调的方法）是标准语言模型是单向(unidirectional）的，所以限制了在预训练阶段可选的模型结构体系。</p><p>比如GPT是从左到右的，每个token只能关注到前一个token的self-attention layers。这种局限对于句子级任务(sentence-level tasks)来说还不是很打紧，但是对于token-level tasks（比如QA）就很致命，所以结合两个方向的上下文信息至关重要。</p><p><img src="/img/520-1.png" alt="Lena"></p><p>BERT对比这两个算法的优点是，只有BERT表征会基于所有层中的左右两侧语境，而能做到这一点得益于Transformer中Attention机制将任意位置的两个单词的距离转换成了1。<br>那么BERT具体是如何实现的呢? 我们接着往下看</p><h2 id="BERT框架及其详细实现"><a href="#BERT框架及其详细实现" class="headerlink" title="BERT框架及其详细实现"></a>BERT框架及其详细实现</h2><p>我们在本节中介绍BERT及其详细实现，训练框架主要由两个步骤构成：预训练和微调。</p><p><a href="https://so.csdn.net/so/search?q=BERT&spm=1001.2101.3001.7020">BERT</a>，基于transformer的双向编码表示，它是一个预训练模型，模型训练时的两个任务是预测句子中被掩盖的词以及判断输入的两个句子是不是上下句。在预训练好的BERT模型后面根据特定任务加上相应的网络，可以完成NLP的下游任务，比如文本分类、机器翻译等。</p><p>       虽然BERT是基于transformer的，但是它只使用了transformer的encoder部分，它的整体框架是由多层transformer的encoder堆叠而成的。每一层的encoder则是由一层muti-head-attention和一层feed-forword组成，大的模型有24层，每层16个attention，小的模型12层，每层12个attention。每个attention的主要作用是通过目标词与句子中的所有词汇的相关度，对目标词重新编码。所以每个attention的计算包括三个步骤：计算词之间的相关度，对相关度归一化，通过相关度和所有词的编码进行加权求和获取目标词的编码。</p><p>        在通过attention计算词之间的相关度时，首先通过三个权重矩阵对输入的序列向量(512*768)做线性变换，分别生成query、key和value三个新的序列向量，用每个词的query向量分别和序列中的所有词的key向量做乘积，得到词与词之间的相关度，然后这个相关度再通过softmax进行归一化，归一化后的权重与value加权求和，得到每个词新的编码。</p><h3 id="模型输入"><a href="#模型输入" class="headerlink" title="模型输入"></a>模型输入</h3><p>      在BERT中，输入的向量是由三种不同的embedding求和而成，分别是：</p><ol><li><p><strong>wordpiece embedding</strong>：单词本身的向量表示。WordPiece是指将单词划分成一组有限的公共子词单元，能在单词的有效性和字符的灵活性之间取得一个折中的平衡。</p></li><li><p><strong>position embedding</strong>：将单词的位置信息编码成特征向量。因为我们的网络结构没有RNN 或者LSTM，因此我们无法得到序列的位置信息，所以需要构建一个position embedding。构建position embedding有两种方法：BERT是初始化一个position embedding，然后通过训练将其学出来；而Transformer是通过制定规则来构建一个position embedding</p></li><li><p><strong>segment embedding</strong>：用于区分两个句子的向量表示。这个在问答等非对称句子中是用区别的。</p><p> BERT模型的输入就是wordpiece token embedding + segment embedding + position embedding，如图所示：</p></li></ol><p>        <img src="/img/520-2.png" alt="Lena"><br>        对于每一种向量的具体表现形式，可以参考这篇文章，可视化的给出了BERT中各种embedding的表现：</p><p>        <a href="https://mp.weixin.qq.com/s/DfIAuo775_sHGYi5z9IZyw" title="BERT的嵌入层是如何实现的？看完你就明白了">BERT的嵌入层是如何实现的？看完你就明白了</a></p><h3 id="网络结构"><a href="#网络结构" class="headerlink" title="网络结构"></a>网络结构</h3><p>        BERT的主要结构是transformer（如图1所示），一个BERT预训练模型的基础结构是标准transformer结构的encoder部分，一个标准transformer结构如图2所示，其中左边的部分就是BERT中使用的encoder部分。<br>   <img src="/img/520-3.png" alt="Lena"><br>   <p align="center">Bert网络结构</p><br>   一个transformer的encoder单元由一个multi-head-Attention + <a href="https://so.csdn.net/so/search?q=Layer&spm=1001.2101.3001.7020">Layer</a> Normalization + feedforword + Layer Normalization 叠加产生，BERT的每一层由一个这样的encoder单元构成。在比较大的BERT模型中，有24层encoder，每层中有16个Attention，词向量的维度是1024。在比较小的BERT模型中，有12层encoder，每层有12个Attention，词向量维度是768。在所有情况下，将feed-forward&#x2F;filter 的大小设置为 4H（H为词向量的维度），即H &#x3D; 768时为3072，H &#x3D; 1024时为4096。</p><p>        这种transformer的结构可以使用上下文来预测mask的token，从而捕捉双向关系。<br>       <br>  <img src="/img/520-4.png" alt="Lena"><br>  <p align="center">标准的transformer结构（左边是encoder部分）</p></p><h3 id="训练框架"><a href="#训练框架" class="headerlink" title="训练框架"></a>训练框架</h3><p><img src="/img/520-5.png" alt="Lena"><br>BERT的总体预培训和微调程序。除了输出层，预训练和微调中都使用相同的体系结构。相同的预训练模型参数用于初始化不同下游任务的模型。在微调期间，所有参数都会微调。[CLS]是在每个输入示例前面添加的特殊符号，【SEP】是一个特殊的分隔符令牌（例如，分隔问题&#x2F;答案）。</p><ul><li><strong>Pre-training预训练：</strong></li></ul><p>在预训练阶段，BERT用大量的<strong>无监督</strong>文本通过自监督训练的方式(通过使用受完形填空任务启发的<strong>Masked Language Model</strong><a href="https://zhuanlan.zhihu.com/p/130913995#ref_4">[4]</a>预训练目标)训练，把文本中包含的语言知识（包括：词法、语法、语义等特征）以参数的形式编码到Transformer-encoder layer中。预训练模型学习到的是文本的通用知识，不依托于某一项NLP任务；（2.4小节展开详述）</p><ul><li><strong>Fine-Tuning微调：</strong></li></ul><p>NLP 问题被证明同图像一样，可以通过 finetune 在垂直领域取得效果的提升。Bert 模型本身极其依赖计算资源，从 0 训练对大多数开发者都是难以想象的事。在节省资源避免重头开始训练的同时，为更好的拟合垂直领域的语料，我们有了 finetune 的动机。</p><p>在微调阶段，BERT首先使用预训练的参数初始化模型，所有参数都使用下游任务的标签数据进行微调，每个不同的下游任务都有单独的微调模型（2.5小节展开详述）</p><h3 id="模型架构"><a href="#模型架构" class="headerlink" title="模型架构"></a><strong>模型架构</strong></h3><p>BERT的模型体系结构是基于Vaswani等人描述的原始实现的多层双向变压器编码器<a href="https://zhuanlan.zhihu.com/p/130913995#ref_5">[5]</a></p><p>关于大名鼎鼎的底座模型Transformer这边就不展开赘述了，详情可参考优秀指南<br><a href="https://link.zhihu.com/?target=http://nlp.seas.harvard.edu/2018/04/03/attention.html">http://nlp.seas.harvard.edu/2018/04/03/attention.html​nlp.seas.harvard.edu/2018/04/03/attention.html<img src="https://pic1.zhimg.com/v2-5db46b14342e33f39d2b6507100efb94_120x160.jpg"></a></p><p>首先明确几个概念，在本工作中，我们命名表示层数为L（Transformer Blocks），隐藏层数为H，自注意力头数量为A。我们主要报告的型号尺寸为</p><ul><li>BERT_base(L&#x3D;12,H&#x3D;768,A&#x3D;12; parameters&#x3D;110M)</li><li>BERT_large(L&#x3D;24,H&#x3D;1024,A&#x3D;16; parameters&#x3D;340M)</li></ul><p>后者的大小和OpenAI GPT是相同的，以便比较效果。</p><h3 id="输入-x2F-输出表示"><a href="#输入-x2F-输出表示" class="headerlink" title="输入&#x2F;输出表示"></a><strong>输入&#x2F;输出表示</strong></h3><p><img src="/img/520-6.png" alt="Lena"><br>如上图所示，BERT模型有两个特殊的token：<strong>CLS</strong> （用于分类任务）、 <strong>SEP</strong>（用于断句），以及三个类型的<strong>embedding</strong>：</p><ul><li><strong>Token embedding：</strong>输入的文本经过tokenization之后，将CLS插入tokenization结果的开头，SEP插入到tokenization结果的结尾。然后进行token embedding look up。shape为：[seq_length, embedding_dims]。流程如下图所示：</li></ul><p><img src="/img/520-7.png" alt="Lena"></p><ul><li><p><strong>Segment embedding：</strong>在NSP任务中，用于区分第一句和第二句。segment embedding中只有 0 和 1两个值，第一句所有的token（包括cls和紧随第一句的sep）的segment embedding的值为0，第二句所有的token（包括紧随第二句的sep）的segment embdding的值为1。shape为：[seq_length, embedding_dims]。流程如下图所示：<br><img src="/img/520-8.png" alt="Lena"><br> Segment Embeddings 层只有两种向量表示。前一个向量是把0赋给第一个句子中的各个token, 后一个向量是把1赋给第二个句子中的各个token。如果输入仅仅只有一个句子，那么它的segment embedding就是全0 </p></li><li><p>position Embedding</p></li></ul><p>Transformers无法编码输入的序列的顺序性,加入position embeddings会让BERT理解下面下面这种情况, I think, therefore I am,第一个 “I” 和第二个 “I”应该有着不同的向量表示</p><p>BERT能够处理最长512个token的输入序列。论文作者通过让BERT在各个位置上学习一个向量表示来讲序列顺序的信息编码进来。这意味着Position Embeddings layer 实际上就是一个大小为 (512, 768) 的lookup表，表的第一行是代表第一个序列的第一个位置，第二行代表序列的第二个位置，以此类推。因此，如果有这样两个句子“Hello world” 和“Hi there”, “Hello” 和“Hi”会由完全相同的position embeddings，因为他们都是句子的第一个词。同理，“world” 和“there”也会有相同的position embedding</p><p>我们已经介绍了长度为n的输入序列将获得的三种不同的向量表示，分别是：</p><p>Token Embeddings， (1, n, 768) ，词的向量表示<br>Segment Embeddings， (1, n, 768)，辅助BERT区别句子对中的两个句子的向量表示<br>Position Embeddings ，(1, n, 768) ，让BERT学习到输入的顺序属性<br>这些表示会被按元素相加，得到一个大小为(1, n, 768)的合成表示。这一表示就是BERT编码层的输入了<br>因此，BERT的输入为：</p><p><strong>token_embedding + segment_embedding + position_embedding</strong></p><h2 id="预训练任务"><a href="#预训练任务" class="headerlink" title="预训练任务"></a><strong>预训练任务</strong></h2><p><strong>（1）masked language model</strong></p><p>         随机掩盖掉一些单词，然后通过上下文预测该单词。BERT中有15%的wordpiece token会被随机掩盖，这15%的token中80%用[MASK]这个token来代替，10%用随机的一个词来替换，10%保持这个词不变。这种设计使得模型具有捕捉上下文关系的能力，同时能够有利于token-level tasks例如序列标注。</p><p>Q：为什么选中的15%的wordpiece token不能全部用 [MASK]代替，而要用 10% 的 random token 和 10% 的原 token</p><p>       [MASK] 是以一种显式的方式告诉模型『这个词我不告诉你，你自己从上下文里猜』，从而防止信息泄露。如果 [MASK] 以外的部分全部都用原 token，模型会学到『如果当前词是 [MASK]，就根据其他词的信息推断这个词；如果当前词是一个正常的单词，就直接抄输入』。这样一来，在 finetune 阶段，所有词都是正常单词，模型就照抄所有词，不提取单词间的依赖关系了。</p><p>        以一定的概率填入 random token，就是让模型时刻堤防着，在任意 token 的位置都需要把当前 token 的信息和上下文推断出的信息相结合。这样一来，在 finetune 阶段的正常句子上，模型也会同时提取这两方面的信息，因为它不知道它所看到的『正常单词』到底有没有被动过手脚的。</p><p>Q：最后怎么利用[MASK] token做的预测？</p><p>       最终的损失函数只计算被mask掉的token的，每个句子里 [MASK] 的个数是不定的。实际代码实现是每个句子有一个 maximum number of predictions，取所有 [MASK] 的位置以及一些 PADDING 位置的向量拿出来做预测（总共凑成 maximum number of predictions 这么多个预测，是定长的），然后再用掩码把 PADDING 盖掉，只计算[MASK]部分的损失。</p><p><strong>（2）next sentence prediction</strong></p><p>        语料中50%的句子，选择其相应的下一句一起形成上下句，作为正样本；其余50%的句子随机选择一句非下一句一起形成上下句，作为负样本。这种设定，有利于sentence-level tasks，例如问答。注意：作者特意说了语料的选取很关键，要选用document-level的而不是sentence-level的，这样可以具备抽象连续长序列特征的能力。</p><h3 id="模型训练设置"><a href="#模型训练设置" class="headerlink" title="模型训练设置"></a>模型训练设置</h3><ul><li><strong>pre-train阶段</strong></li></ul><p>（1）256个句子作为一个batch,每个句子最多512个token。</p><p>（2）迭代100万步。</p><p>（3）总共训练样本超过33亿。</p><p>（4）迭代40个epochs。</p><p>（5）用adam学习率， 1 &#x3D; 0.9, 2 &#x3D; 0.999。</p><p>（6）学习率头一万步保持固定值，之后线性衰减。</p><p>（7）L2衰减，衰减参数为0.01。</p><p>（8）drop out设置为0.1。</p><p>（9）激活函数用GELU代替RELU。</p><p>（10）Bert base版本用了16个TPU，Bert large版本用了64个TPU，训练时间4天完成。</p><p>（论文定义了两个版本，一个是base版本，一个是large版本。Large版本（L&#x3D;24, H&#x3D;1024, A&#x3D;16, Total Parameters&#x3D;340M）。base版本（ L&#x3D;12, H&#x3D;768, A&#x3D;12, Total Pa- rameters&#x3D;110M）。L代表网络层数，H代表隐藏层数，A代表self attention head的数量。）</p><p>因为序列长度太大（512）会影响训练速度，所以90%的steps都用seq_len&#x3D;128训练，余下的10%步数训练512长度的输入。</p><ul><li><p><strong>fine-tune 阶段</strong></p><p>  微调阶段根据不同任务使用不同网络模型。在微调阶段，大部分模型的超参数跟预训练时差不多，除了batchsize，学习率，epochs。</p><p>  微调参数建议：</p><p>  Batch size: 16, 32</p><p>  Learning rate (Adam): 5e-5, 3e-5, 2e-5</p><p>  Number of epochs: 3, 4</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="模型特点"><a href="#模型特点" class="headerlink" title="模型特点"></a>模型特点</h3><p>（1）使用transformer作为算法的主要框架，transformer能<strong>更彻底的捕捉语句中的双向关系</strong>；</p><p>（2）使用了mask language model 和next sentence prediction的多任务训练目标，<strong>是一个自监督的过程，不需要数据的标注</strong>；</p><p>（3）使用tpu这种强大的机器训练了大规模的预料，是NLP的很多任务达到了全新的高度。</p><p>       BERT本质上是在海量语料的基础上，通过自监督学习的方法为单词学习一个好的特征表示。该模型的优点是可以根据具体的人物进行微调，或者直接使用预训练的模型作为特征提取器。</p><h3 id="可优化空间"><a href="#可优化空间" class="headerlink" title="可优化空间"></a>可优化空间</h3><p>（1）如何让模型有<strong>捕捉Token序列关系</strong>的能力，而不是简单依靠位置嵌入。</p><p>（2）模型太大，太耗机器（后续的Albert有做改进）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 专业前沿 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>脑机接口在神经康复中的应用</title>
      <link href="/2024/05/19/%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3%E5%9C%A8%E7%A5%9E%E7%BB%8F%E5%BA%B7%E5%A4%8D%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
      <url>/2024/05/19/%E8%84%91%E6%9C%BA%E6%8E%A5%E5%8F%A3%E5%9C%A8%E7%A5%9E%E7%BB%8F%E5%BA%B7%E5%A4%8D%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="脑机接口在神经康复中的应用：技术、挑战与未来"><a href="#脑机接口在神经康复中的应用：技术、挑战与未来" class="headerlink" title="脑机接口在神经康复中的应用：技术、挑战与未来"></a>脑机接口在神经康复中的应用：技术、挑战与未来</h2><p><strong>摘要：</strong>脑机接口（Brain-Computer Interface, BCI）技术在神经康复中的应用是近年来快速发展的前沿领域，旨在通过解读大脑信号来辅助神经系统损伤患者的康复。本文综述了BCI技术的基本概念和理论基础，探讨了其在中风和脊髓损伤等神经康复中的实际应用。文章分析了BCI技术在信号获取、处理及用户体验等方面面临的挑战，并提出了潜在的解决方案。通过对现有研究成果的比较和分析，本文展望了BCI技术在神经康复中的未来发展趋势和应用前景，指出了值得深入研究的方向。BCI技术在促进患者康复、推动神经科学研究和多学科融合发展方面具有重要意义，未来将成为神经康复领域的重要技术手段。</p><p><strong>关键词：<a href="https://kns.cnki.net/kcms2/keyword/detail?v=mjz80qGfPOWHIm7Y6wjHOodvlHNbQF1XHO8qAZaSe7ITFS_DxrIP1u3pl5_64E85R7iP2zkYaTSj6In8I63uas8gxOR8JAuyiJEX8jyLeXgf0H8GJmZQ62BuJBlcGSEF&uniplatform=NZKPT&language=CHS">突触可塑性;</a> <a href="https://kns.cnki.net/kcms2/keyword/detail?v=mjz80qGfPOWHIm7Y6wjHOodvlHNbQF1XLIZmbyT8nOfHgNIgjzvfYD6RsXg63Ii2pU8XvMfFGEpTu33vrjIQhpDSqCwE7LHN&uniplatform=NZKPT&language=CHS">卒中;</a> <a href="https://kns.cnki.net/kcms2/keyword/detail?v=mjz80qGfPOWHIm7Y6wjHOodvlHNbQF1XYotKzrLtQOYhj9oNbQJmlVXG8dJpyif135Qb2EmiZ97J5ZlVO8YUM0ehblvzx6d0N9puduN-uN2ZY9cmAE1F_A==&uniplatform=NZKPT&language=CHS">功能重组;</a> <a href="https://kns.cnki.net/kcms2/keyword/detail?v=mjz80qGfPOWHIm7Y6wjHOodvlHNbQF1XWJMa7IUAZ973RfvqZOwnMJl-dO4111cNqwSHsM-lDI4DIMpsZ7Su1GNG_rWvJT3EZ-R6hf-O5dKS3b6bdUcrrg==&uniplatform=NZKPT&language=CHS">神经康复;</a></strong></p><h3 id="1-研究意义"><a href="#1-研究意义" class="headerlink" title="1. 研究意义"></a>1. 研究意义</h3><p>脑机接口（Brain-Computer Interface, BCI）技术在神经康复中的应用为神经系统损伤患者提供了一种全新的康复途径。通过直接读取大脑信号并将其转化为外部设备的控制命令，BCI技术可以帮助患者恢复运动功能、认知能力和语言能力，显著改善患者的生活质量。研究这一技术的应用不仅有助于推动神经康复领域的发展，还能为更多的神经系统疾病提供有效的康复手段。<br><img src="/img/519-1.png" alt="Lena"></p><h4 id="1-1-提升神经康复效果"><a href="#1-1-提升神经康复效果" class="headerlink" title="1.1. 提升神经康复效果"></a>1.1. 提升神经康复效果</h4><p>传统的神经康复方法，如物理治疗和职业治疗，虽然有效，但常常依赖于患者的自主运动能力和认知状态。而BCI技术通过直接解读大脑信号并将其转化为控制指令，能够为那些严重运动障碍患者提供全新的康复路径。研究表明，BCI结合运动想象训练和虚拟现实技术，可以显著促进中风患者的运动功能恢复​ (<a href="https://svn.bmj.com/content/7/6/541">BMJ SVNP</a>)​。</p><h4 id="1-2-推动神经科学研究"><a href="#1-2-推动神经科学研究" class="headerlink" title="1.2. 推动神经科学研究"></a>1.2. 推动神经科学研究</h4><p>BCI技术的应用有助于深入理解大脑功能和神经可塑性机制。通过分析患者在康复训练中的脑电信号，研究人员可以获取有关大脑如何在神经损伤后重塑和恢复的宝贵数据。这不仅对神经康复有指导意义，也为神经科学的基础研究提供了重要的实验数据和研究模型​ (<a href="https://braininformatics.springeropen.com/articles/10.1186/s40708-023-00199-3">SpringerOpen</a>)​<br><img src="/img/519-2.png" alt="Lena"></p><p align="center">神经系统的基本组成（神经元、神经网络、突触）</p><h4 id="1-3-促进多学科融合发展"><a href="#1-3-促进多学科融合发展" class="headerlink" title="1.3. 促进多学科融合发展"></a>1.3. 促进多学科融合发展</h4><p>BCI技术的发展需要神经科学、计算机科学、工程学和临床医学等多个学科的协同合作。通过BCI在神经康复中的应用研究，可以促进这些学科之间的交流与合作，推动跨学科研究的进步。例如，信号处理和人工智能技术的进步直接影响到BCI系统的性能和应用效果​ (<a href="https://www.frontiersin.org/journals/neuroscience/articles/10.3389/fnins.2021.699428/full">Frontiers</a>)​。</p><h4 id="1-4-提供个性化康复方案"><a href="#1-4-提供个性化康复方案" class="headerlink" title="1.4. 提供个性化康复方案"></a>1.4. 提供个性化康复方案</h4><p>每位神经损伤患者的病情和恢复过程各不相同，BCI技术可以根据患者的脑电信号和康复需求，提供个性化的康复训练方案。这种定制化的康复方法能够更有效地满足患者的需求，提高康复效果和患者的生活质量​ (<a href="https://svn.bmj.com/content/7/6/541">BMJ SVNP</a>)​。</p><h4 id="1-5-促进康复医疗技术进步"><a href="#1-5-促进康复医疗技术进步" class="headerlink" title="1.5. 促进康复医疗技术进步"></a>1.5. 促进康复医疗技术进步</h4><p>BCI技术的研究和应用推动了康复医疗设备的发展。通过与机器人、虚拟现实和人工智能技术的结合，BCI系统正在变得越来越智能和高效。这不仅提高了康复训练的效果，也大大拓展了康复医疗设备的应用范围​ (<a href="https://braininformatics.springeropen.com/articles/10.1186/s40708-023-00199-3">SpringerOpen</a>)​。</p><h4 id="1-6-伦理和社会影响"><a href="#1-6-伦理和社会影响" class="headerlink" title="1.6. 伦理和社会影响"></a>1.6. 伦理和社会影响</h4><p>研究BCI技术在神经康复中的应用还具有重要的伦理和社会意义。如何确保患者数据的隐私和安全，如何制定合理的伦理规范和使用指南，都是BCI技术应用过程中需要解决的重要问题。通过相关研究，可以为制定政策和规范提供科学依据，确保BCI技术的安全和可持续发展​ (<a href="https://svn.bmj.com/content/7/6/541">BMJ SVNP</a>)​。</p><h3 id="2-概念、定义、理论基础"><a href="#2-概念、定义、理论基础" class="headerlink" title="2. 概念、定义、理论基础"></a>2. 概念、定义、理论基础</h3><p>脑机接口是一种通过检测和解释大脑信号来实现人机交互的技术。其核心理论基础包括：</p><p><strong>神经塑性（Neuroplasticity）</strong>：指大脑在受损后通过重新组织自身结构和功能来恢复正常功能的能力​ (<a href="https://svn.bmj.com/content/7/6/541">BMJ SVNP</a>)​。</p><p><strong>运动想象（Motor Imagery）</strong>：指不进行实际运动时，通过想象运动来激活相关脑区的方法，常用于BCI康复训练​ (<a href="https://svn.bmj.com/content/7/6/541">BMJ SVNP</a>)​。</p><h3 id="3-起源、背景、现状、问题"><a href="#3-起源、背景、现状、问题" class="headerlink" title="3. 起源、背景、现状、问题"></a>3. 起源、背景、现状、问题</h3><h4 id="3-1-起源与背景"><a href="#3-1-起源与背景" class="headerlink" title="3.1 起源与背景"></a>3.1 起源与背景</h4><p>BCI技术最早起源于20世纪60年代，最初用于探索如何通过大脑信号直接控制计算机和其他设备。随着科技的进步，BCI逐渐应用于医疗领域，特别是在神经康复中的应用。</p><h4 id="3-2-现状"><a href="#3-2-现状" class="headerlink" title="3.2 现状"></a>3.2 现状</h4><p>目前，BCI技术已经广泛应用于中风、脊髓损伤等患者的康复训练中。通过EEG等无创技术获取脑电信号，并结合虚拟现实、机器人等技术，BCI康复训练在临床上取得了显著效果​ (<a href="https://www.frontiersin.org/journals/neuroscience/articles/10.3389/fnins.2021.699428/full">Frontiers</a>)​​ (<a href="https://svn.bmj.com/content/7/6/541">BMJ SVNP</a>)​。<br><img src="/img/519-3.png" alt="Lena"></p><p align="center">神经可塑性</p><h4 id="3-3-问题"><a href="#3-3-问题" class="headerlink" title="3.3 问题"></a>3.3 问题</h4><p><strong>技术挑战</strong>：信号噪声和伪影、数据处理复杂、实时性和准确性问题​ (<a href="https://www.frontiersin.org/journals/neuroscience/articles/10.3389/fnins.2021.699428/full">Frontiers</a>)​。</p><p><strong>临床应用挑战</strong>：个体差异、长期使用效果、用户适应性问题​ (<a href="https://braininformatics.springeropen.com/articles/10.1186/s40708-023-00199-3">SpringerOpen</a>)​。</p><p><strong>伦理和隐私问题</strong>：数据隐私和安全、知情同意和使用伦理​ (<a href="https://svn.bmj.com/content/7/6/541">BMJ SVNP</a>)​。</p><h3 id="4-研究方案、技术、结论及相关问题的比较和分析"><a href="#4-研究方案、技术、结论及相关问题的比较和分析" class="headerlink" title="4. 研究方案、技术、结论及相关问题的比较和分析"></a>4. 研究方案、技术、结论及相关问题的比较和分析</h3><h4 id="4-1-研究方案"><a href="#4-1-研究方案" class="headerlink" title="4.1 研究方案"></a>4.1 研究方案</h4><p>研究通常包括以下几个步骤：</p><p><strong>信号采集</strong>：通过EEG等设备采集大脑信号。</p><p><strong>信号处理</strong>：包括滤波、去噪、特征提取和分类。</p><p><strong>反馈机制</strong>：通过虚拟现实、机器人等设备提供实时反馈。</p><h4 id="4-2-技术"><a href="#4-2-技术" class="headerlink" title="4.2 技术"></a>4.2 技术</h4><p><strong>EEG技术</strong>：广泛应用于无创BCI系统，具有成本低、便携性强等优点​ (<a href="https://svn.bmj.com/content/7/6/541">BMJ SVNP</a>)​。</p><p><strong>信号处理算法</strong>：如支持向量机、神经网络、深度学习等，用于提高信号分类的准确性​ (<a href="https://braininformatics.springeropen.com/articles/10.1186/s40708-023-00199-3">SpringerOpen</a>)​。</p><h4 id="4-3-结论及比较"><a href="#4-3-结论及比较" class="headerlink" title="4.3 结论及比较"></a>4.3 结论及比较</h4><p><strong>中风康复</strong>：BCI结合运动想象和虚拟现实技术，显著改善患者的运动功能​ (<a href="https://svn.bmj.com/content/7/6/541">BMJ SVNP</a>)​。</p><p><strong>脊髓损伤康复</strong>：BCI控制外骨骼机器人，帮助患者恢复运动能力​ (<a href="https://www.frontiersin.org/journals/neuroscience/articles/10.3389/fnins.2021.699428/full">Frontiers</a>)​。</p><h4 id="5-发展趋势"><a href="#5-发展趋势" class="headerlink" title="5. 发展趋势"></a>5. 发展趋势</h4><p>未来，BCI技术在神经康复中的发展将主要集中在以下几个方面：</p><p><strong>人工智能和机器学习</strong>：利用AI优化信号处理和分类算法​ (<a href="https://svn.bmj.com/content/7/6/541">BMJ SVNP</a>)​。</p><p><strong>多模态融合</strong>：结合多种传感器和反馈机制，提高康复效果​ (<a href="https://braininformatics.springeropen.com/articles/10.1186/s40708-023-00199-3">SpringerOpen</a>)​。</p><p><strong>个性化康复方案</strong>：根据患者的具体情况，制定个性化的康复计划​ (<a href="https://www.frontiersin.org/journals/neuroscience/articles/10.3389/fnins.2021.699428/full">Frontiers</a>)​。</p><h3 id="6-值得深入研究的方向"><a href="#6-值得深入研究的方向" class="headerlink" title="6. 值得深入研究的方向"></a>6. 值得深入研究的方向</h3><p><strong>新型传感器技术</strong>：开发更高效、更精确的传感器以提高信号采集的质量​ (<a href="https://svn.bmj.com/content/7/6/541">BMJ SVNP</a>)​。</p><p><strong>长期使用效果</strong>：研究BCI系统的长期使用效果和安全性​ (<a href="https://braininformatics.springeropen.com/articles/10.1186/s40708-023-00199-3">SpringerOpen</a>)​。</p><p><strong>用户体验优化</strong>：改善用户界面设计，提高患者的使用体验和训练效果​ (<a href="https://www.frontiersin.org/journals/neuroscience/articles/10.3389/fnins.2021.699428/full">Frontiers</a>)​。</p><h3 id="7-脑机接口在神经康复中的重要应用和研究成果"><a href="#7-脑机接口在神经康复中的重要应用和研究成果" class="headerlink" title="7. 脑机接口在神经康复中的重要应用和研究成果"></a>7. 脑机接口在神经康复中的重要应用和研究成果</h3><p>对于轻度功能障碍，通过正确的强化训练、作业治疗等方法能帮助患者获得很好的功  能康复。但对于中重度功能障碍，患肢的运动功能往往十分受限甚至几乎完全丧失。为让这些患者能进行正确的主动康复训练，科学家引入了脑机接口技术。从对神经系统功能的影响看，脑机接口可分为三类：功能替代、功能辅助、功能增强与拓展。用于神经功能康复的脑机接口基本上是非侵入式的，主要起到辅助作用。若肢体运动功能障碍完全无法修复时，只能采用替代性脑机接口，如运动假体。</p><p>就神经康复脑机接口而言，它通过对神经界面采集到的脑活动信号进行实时解码，根据解码结果驱动外部设备，及时辅助肢体完成运动训练。根据赫布法则和脉冲时序依赖性可塑性，相关神经元的同步发放对于神经功能网络的修复是至关重要的。利用脑机接口进行运动康复训练的第一步就是用户要自主产生运动意图。1979年，奥地利神经科学家普尔特席勒（G.Pfurtscheller）发现，当被试者在执行一个简单的手指运动时，对应皮层肢体感觉运动功能区的脑电图信号会在α(8-12赫兹）和β（13-30赫兹）频段发生明显的能量衰减，这被称为事件相关去同步化，而在手指运动结束并保持静息状态时，该脑区的信号能量又会有一个明显的反弹性升高，即事件相关同步化[7]。进一步研究发现，除了运动指令传输到肢体执行了真实的动作之外，当被试者有肢体的运动计划或运动想象时，相应脑区也能记录到这两种现象。该生理特征为利用非侵入式脑电图信号识别运动意图奠定了基础，也促成研究者首次利用基于脑电图的脑机接口帮助四肢截瘫患者进行手指运动训练。此后，利用运动想象EEG信号开发神经康复脑机接口的研究持续增加。至今，运动想象和脑电图依然是主流的行为范式和神经界面技术。<br><img src="/img/519-4.png" alt="Lena"></p><p align="center">脑机接口辅助上肢运动康复训练</p><p>在记录到脑活动信号后，在线脑机接口需要对其依次进行预处理、特征提取和分类，方可完成神经解码。而得益于传统机器学习和近年复兴的深度学习算法的进步，非侵入式脑机接口解码技术已相当成熟。其中，常用的特征提取方法有时频分析和空间滤波，常用的分类方法有支持向量机和卷积神经网络。在神经控制环节，当确认被试者有运动意图，脑机接口会驱动外部设备及时辅助肢体进行相应的运动训练。根据外部设备类型，当前的脑机接口主要有两种：一种结合功能性电刺激，一种结合康复机器人。前者主要通过经皮电刺激引起肌肉和外周神经元兴奋，后者通过机械牵引。</p><p>综合来看，脑机接口一方面保证了中枢神经的充分激活，从而利于运动控制网络的修复；另一方面通过外部设备使得外周肢体能及时响应，从而让中枢活动和外周活动能紧密耦联。这种紧密耦联同时涉及从中枢到外周的运动传出通路和从外周到中枢的感觉传入通路，对于整个感觉运动控制系统的重构无疑是举足轻重的。另外很重要的一点是，脑机接口训练能够规范运动训练内容，让被试者避免形成不良的运动习惯，尤其是代偿性运动。可以预期，脑机接口辅助康复训练能够加快运动康复进程，缩短康复时间，提高最终的康复效果。2018年美国神经病学会会刊《神经病学》上发表的一篇荟萃分析,回顾了过去10多年的临床试验发现，相比于其他康复治疗手段（如镜像疗法、虚拟现实、机器人辅助、经颅直流电刺激等），接受脑机接口训练的患者的运动功能评分改善最为明显，表明脑机接口技术具有很大的优越性[8]。同年，瑞士一个团队报道了在卒中发病至少10个月以上的患者使用脑机接口进行康复训练的结果[9]。实验中，患者佩戴脑电帽，努力尝试伸展患侧手指。每当检测到运动意图时就驱动设备对指总伸肌（位于前臂和手掌背面的控制拇指以外4个手指伸展的肌群）进行功能性电刺激。经过连续5周训练，发现接受脑机接口训练的患者与那些接受随机功能性电刺激的患者相比，感觉运动功能评分获得临床显著意义的提升，且这种改善至少可保持30周。这项结果表明，脑机接口可以在一定程度上突破传统认为的卒中康复天花板（即卒中后6个月达到平台期），且治疗效果有持久性。</p><h3 id="8-未来的挑战"><a href="#8-未来的挑战" class="headerlink" title="8.未来的挑战"></a>8.未来的挑战</h3><p>从细胞学说到发现神经系统，再到阐明神经的可塑性，在探索神经系统的科研道路上，科学家们前赴后继，终于在近200年后催生出脑机接口技术，让卒中患者重获塑造新生的信心。经过20多年的探索，脑机接口已取得巨大进步，并在卒中康复治疗中展现出令人喜悦的效果。</p><p>由于人体神经—肌肉—骨骼系统的复杂性，目前限制脑机接口在运动康复中发挥最大效用的因素主要有两个方面。一是因为依然缺乏对感觉运动控制、高级认知、跨越细胞和皮层功能区的可塑性等神经机制的了解，包括左右大脑半球的相互关系、运动控制指令的产生和传输、局部神经网络的重构过程、电磁刺激对神经系统的作用机制等。其中极为重要的是运动意图是如何产生并逐步生成运动控制指令。当前主流的脑机接口都是采用单纯的运动想象范式来引导患者形成运动意图。但近年有研究表明，运动想象的皮层激活虽然与真实的运动执行有相似之处，但二者是有根本区别的，前者主要引起初级运动皮层浅层皮质的激活，后者则引起浅层和深层的激活，且激活水平明显更高。另外，这些运动想象范式往往都是让患者看到图像提示后凭空想象运动，而不是与某个确定的物体直接进行交互，这与我们日常生活中常见的目标导向运动相去甚远，也难以调动更多脑区参与到运动训练中。</p><p>另一方面是现有技术的不足，包括非侵入式信号的信息量有限、不同训练日的信号漂移与校正、神经界面的抗干扰能力差、神经控制环节的肌肉协同问题等。这些问题都需要各学科通力合作。例如，肌肉协同问题需要功能性电刺激和康复机器人能事先完成动力学建模、运动轨迹规划和力控计算，从而提高训练辅助过程中的柔顺性、精准性和安全性。而且，为设计精准的康复治疗方案，感觉运动功能评估的规范性和精准性也需进一步提高。</p><p>当前，世界各国对脑科学研究越来越重视，随着脑科学在神经康复上不断加大的投入和转化，将改变当前的临床现状，不仅把治疗师从繁重的体力劳动中解放出来，而且治疗方案也会进一步细化，并增强患者的参与度，提高康复速度和效果。脑机接口康复方法目前在国内刚刚萌芽，它将具有巨大的市场规模和广阔的市场前景。</p><h3 id="9-应用前景预测"><a href="#9-应用前景预测" class="headerlink" title="9. 应用前景预测"></a>9. 应用前景预测</h3><p>随着技术的不断进步和多学科的协同合作，BCI在神经康复中的应用前景广阔。未来，BCI技术有望成为神经系统疾病康复的重要手段，进一步推动康复医学的发展，显著改善患者的生活质量。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 专业前沿 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之文件上传</title>
      <link href="/2023/10/08/php%E4%B9%8B%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2023/10/08/php%E4%B9%8B%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP-文件上传-，通过-PHP，可以把文件上传到服务器。-允许用户从表单上传文件是非常有用的。"><a href="#PHP-文件上传-，通过-PHP，可以把文件上传到服务器。-允许用户从表单上传文件是非常有用的。" class="headerlink" title="PHP 文件上传 ，通过 PHP，可以把文件上传到服务器。 允许用户从表单上传文件是非常有用的。"></a>PHP 文件上传 ，通过 PHP，可以把文件上传到服务器。 允许用户从表单上传文件是非常有用的。</h2><h2 id="创建一个文件上传表单"><a href="#创建一个文件上传表单" class="headerlink" title="创建一个文件上传表单"></a>创建一个文件上传表单</h2><p>允许用户从表单上传文件是非常有用的。</p><p>请看下面这个供上传文件的 HTML 表单：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>php文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span></span></span><br><span class="line"><span class="tag">      <span class="attr">action</span>=<span class="string">&quot;../php/upload_file.php&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">method</span>=<span class="string">&quot;post&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有关上面的 HTML 表单的一些注意项列举如下：<br>form 标签的 enctype 属性规定了在提交表单时要使用哪种内容类型。在表单需要二进制数据时，比如文件内容，请使用 “multipart&#x2F;form-data”。<br>input 标签的 type&#x3D;”file” 属性规定了应该把输入作为文件来处理。举例来说，当在浏览器中预览时，会看到输入框旁边有一个浏览按钮。</p><p>注释：允许用户上传文件是一个巨大的安全风险。请仅仅允许可信的用户执行文件上传操作。</p><p>创建上传脚本：<br>“upload_file.php” 文件含有供上传文件的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;错误：&quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;上传文件名: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件类型: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件大小: &quot;</span> . (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>) . <span class="string">&quot; kB&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件临时存储的位置: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一个参数是表单的 input name，第二个下标可以是 “name”、”type”、”size”、”tmp_name” 或 “error”。如下所示：</p><ul><li>$_FILES[“file”][“name”] - 上传文件的名称</li><li>$_FILES[“file”][“type”] - 上传文件的类型</li><li>$_FILES[“file”][“size”] - 上传文件的大小，以字节计</li><li>$_FILES[“file”][“tmp_name”] - 存储在服务器的文件的临时副本的名称</li><li>$_FILES[“file”][“error”] - 由文件上传导致的错误代码</li></ul><p>这是一种非常简单文件上传方式。基于安全方面的考虑，您应当增加有关允许哪些用户上传文件的限制。<br>下图是上传之后的显示。<br><img src="/img/108-1.png" alt="Lena"><br>在这个脚本中，我们增加了对文件上传的限制。用户只能上传 .gif、.jpeg、.jpg、.png 文件，文件大小必须小于 200 kB：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 允许上传的图片后缀</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$allowedExts</span> = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>, <span class="string">&quot;jpeg&quot;</span>, <span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;png&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$temp</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>, <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$extension</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$temp</span>);        <span class="comment">// 获取文件后缀名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (((<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/gif&quot;</span>)</span><br><span class="line"></span><br><span class="line">|| (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/jpeg&quot;</span>)</span><br><span class="line"></span><br><span class="line">|| (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line">|| (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/pjpeg&quot;</span>)</span><br><span class="line"></span><br><span class="line">|| (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/x-png&quot;</span>)</span><br><span class="line"></span><br><span class="line">|| (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/png&quot;</span>))</span><br><span class="line"></span><br><span class="line">&amp;&amp; (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] &lt; <span class="number">204800</span>)    <span class="comment">// 小于 200 kb</span></span><br><span class="line"></span><br><span class="line">&amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$extension</span>, <span class="variable">$allowedExts</span>))</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;错误：: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;上传文件名: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件类型: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>] . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件大小: &quot;</span> . (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>) . <span class="string">&quot; kB&lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;文件临时存储的位置: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;非法的文件格式&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果我们提交一个 doc 文档则会显示<br><img src="/img/108-2.png" alt="Lena"></p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之表单操作</title>
      <link href="/2023/06/16/php%E4%B9%8B%E8%A1%A8%E5%8D%95/"/>
      <url>/2023/06/16/php%E4%B9%8B%E8%A1%A8%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<p><img src="/img/615-1.png" alt="Lena"><br>这是我们 html 的代码，我们用一个 form 标签将我们要提交给服务器后台的数据“username”和“password”通过 post 请求传给后台 php 页面。<br><img src="/img/615-2.png" alt="Lena"><br>在 php 页面我们首先声明两个 post 变量用于接收数据。然后将这两个变量用连接符连接起来，输出在屏幕上，最后的效果是这样的。<br><img src="/img/615-3.png" alt="Lena"><br><img src="/img/615-4.png" alt="Lena"><br>这样我们就初步理解了表单提交这一部分知识点。<br>一、请求分为三种：<br>（1）post 数据提交型：post+url 地址+请求正文<br>（2）get：资源获取型： get+url 地址<br>（3）ajax：利用异步提交方式，在不刷新页面的情况下，提交数据给后台。<br>其中 ajax 位异步请求方式，旨在不改变页面的情况下将数据传给后台。<br>前端用 get，后端就用 $<em>GET 函数取，用 post 后端就用 $_POST 取</em></p><p>二、AJAX 请求<br><img src="/img/615-5.png" alt="Lena"></p><p>（1） 要引入 jquery 的 js 库</p><script src="../js/jquery-3.2.1.min.js"></script><p>（2）不再需要 form，只需要任意一个元素发起 js 事件，让 js 代码进行处理。<br>我们通过在 html 的代码中添加 script 行<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> &lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dopost</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取表单元素的值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> username = $(<span class="string">&quot;#username&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> password = $(<span class="string">&quot;#password&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过字符串拼接为一个正文</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> param = <span class="string">&quot;username=&quot;</span> + username + <span class="string">&quot;&amp;password=&quot;</span>+password; <span class="comment">//将 username 和 password 加进去，加上&amp;符号在尾随&#x27;&#x27;后面。然后将正文</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//window.alert(param); //弹出警告框，并将其显示在页面上。 （如果不可用，请注意允许用户</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//利用 ajax 发送 post 请求，并获取响应。</span></span><br><span class="line"></span><br><span class="line">$.<span class="title function_">post</span>(<span class="string">&#x27;../php/login.php&#x27;</span> , param , <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//data 是返回值的字符串。这是一个 HTML 页面上的表单。 这是一个正文。把返回值包含在 param 中。在页面上查看数据时，可以看到 param。</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">alert</span>(data); <span class="comment">//打印数据到页面上。 如果不可用，请允许用户。</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>    再在后面的登录button中用上上面定义的dopost函数<br>    <button onclick="dopost()">登录</button><br>    这样我们就实现了一个简单的ajax的请求。</p><p><img src="/img/616-6.png" alt="Lena"></p><pre><code></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之数据库操作</title>
      <link href="/2023/06/16/php%E4%B9%8B%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2023/06/16/php%E4%B9%8B%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p><img src="/img/616-1.png" alt="Lena"><br>在连接数据库的时候，输入账号密码，发现并没有显示出我们想要的东西。说明我们并没还有连接成功。<br>而此时我们 php 中的代码是这样的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;localhost&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;********&#x27;</span>);</span><br></pre></td></tr></table></figure><p>ps：这里****是我的密码我就不展示了。<br>问题出在哪里呢？<br>我上网查证，经过一番操作后，翻阅到一篇 php 连接数据的博客<br>里面的 php 代码是这样的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="variable">$db_host</span> = <span class="string">&quot;localhost&quot;</span>; <span class="comment">// Host name&quot;;</span></span><br><span class="line"></span><br><span class="line"> <span class="variable">$db_name</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"></span><br><span class="line"> <span class="variable">$db_pwd</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"> <span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="variable">$db_host</span>, <span class="variable">$db_name</span>, <span class="variable">$db_pwd</span>);</span><br><span class="line"> <span class="keyword">if</span> (<span class="variable">$conn</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;fall&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>, <span class="string">&quot;set names utf_8&quot;</span>);</span><br></pre></td></tr></table></figure><p>我将他的代码 copy 过来，发现我的页面显示还是不正确。</p><p>这个时候重点来了，因为我之前发现我的 xampp 中的 mysql 和本地服务器的 mysql 他们有冲突，我当时的解决方案是关闭本地服务的 mysql，这样端口 3306 就给了 xampp 的 mysql，不会造成端口冲突。但这样一开一关很麻烦。我在网上查资料，发现可以将 xampp 的端口改为非 3306（例如 3307），我在 xampp 中就进行了一番配置。这里配置主要是 mysql 端口 config 下的 my.ini 里面，将 3306 都改为 3307，然后我也顺便将 Apache 的端口改成了 8826 原本是 80。两个部分具体的配置建议参照网上的教程，我这里不详细。（ps：记得重启 xampp 面板里面的两个服务，因为修改了配置文件）<br><img src="/img/616-2.png" alt="Lena"><br>配置完成之后<br>我将上面有一行的代码进行了修改。如下图。然后就成功了！如下图的显示。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> <span class="variable">$db_host</span> = <span class="string">&quot;localhost：3307&quot;</span>; <span class="comment">// Host name&quot;;</span></span><br></pre></td></tr></table></figure><p><img src="/img/616-3.png" alt="Lena"><br>不过问题又来了，连接数据库貌似成功了，但是我们现在这个数据库和本地数据库是不同的。意思就是现在 xampp 中的数据库是空的。我们要在里面创建数据库，创建表，才能使得 php 和数据库进行连接访问，进行一些 sql 语句的使用。<br>mysqli_real_connect(): (HY000&#x2F;1045): Access denied for user ‘root‘@’localhost’ (using password: YES)</p><p>上面这条语句是我最后一个卡壳的问题。意思就是密码错误。<br>我当时的密码设置是我本地 mysql3306 的密码，我想肯定有问题，第一是现在我用的 3307 端口，第二是目前我用的 xampp 数据库他和本地数据库肯定不能共用。知道这一点之后我又在网上查询，发现 xampp 数据库初始密码为空！！！！好，我又将配置文件密码改回来，这个时候回看我的代码，我那个时候设置的 pssword 确实为空。才连接成功的。<br><img src="/img/616-4.png" alt="Lena"></p><p>上面这个截图是\xampp 目录下的 phpMyAdmin 文件夹里面的 config.inc.php 这个配置文件。<br>改好之后。我再次访问(<a href="http://localhost:8626/phpmyadmin/">http://localhost:8626/phpmyadmin/</a>)<br>ps：注意上面 localhost 后面 8626 是我改了 apache 端口之后的端口默认是 80，所以读者不要直接复制这个网址，主要是后面的 phpmyadmin 这个页面。然后此时显示出来了页面如下图。ok 我可以进行增加数据库以及更改数据库密码那些操作了。问题解决！<br><img src="/img/616-5.png" alt="Lena"></p><p><img src="/img/616-6.png" alt="Lena"></p><p>如上图显示 ,下面是我的代码，learn 是我在 xampp 新加的一个库，然后是 user 表 里面有 username 和 password 两个属性。成功的打印出了我们想要的东西。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">mysqli_select_db</span>(<span class="variable">$conn</span>,<span class="string">&quot;learn&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> =  <span class="string">&quot;select * from user where username = &#x27;<span class="subst">$username</span>&#x27; and password = &#x27;<span class="subst">$password</span>&#x27; &quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$sql</span>;</span><br></pre></td></tr></table></figure><p>后面修改 xampp 数据库密码请参见这篇文章 (<a href="https://blog.csdn.net/qq_41901122/article/details/109910774">https://blog.csdn.net/qq_41901122/article/details/109910774</a>)</p>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一回</title>
      <link href="/2023/05/04/%E7%AC%AC%E4%B8%80%E5%9B%9E/"/>
      <url>/2023/05/04/%E7%AC%AC%E4%B8%80%E5%9B%9E/</url>
      
        <content type="html"><![CDATA[<pre><code>                                                     第一幕：久别之后 “老板，来两杯度数低一点的酒”。    走进店里的是一男一女，男孩略带羞涩的点了两杯酒，我一眼就看出来他们不是经常来喝酒的人。女孩坐在吧台面前转着自己的椅子，摇晃这面前的骰子。    “分开之后这些时间，过得怎么样？”男生的一句话打破了原先略显尴尬的气氛。    “噢？就那样呗，照样上课，按时吃饭，看看小说。”女孩低着头看着骰盅里面的点数，嘴里含糊这回答男孩。“你呢？不是计划着开始‘一路向北’旅游了吗，钱攒的怎么    样了？”    女孩进入酒馆后第一次眼神落在男孩身上。    “那肯定啊，我这么厉害”男孩眼神躲闪着，嘴上却说着肯定的话。“啰，这是我给你准备的七周年礼物回去才看哦”说着他从脚边拿起一个礼品袋看样子是装着他准备好的    礼物。    女生见状也从身边拎出了一个口袋放在吧台上。他们交换了礼物。    “你们的酒好了，来，这杯是你的叫‘勇敢的心‘。”说着我轻轻的将这杯酒推到了男生面前。“这杯’美国往事‘是你的小姐。”我以同样的动作将酒送到女孩面前。我走到了    一旁一边收拾着台面一边打望着这两个人。    “这个老板还挺有意思的，给这些酒取的名字。”女孩打趣地看着手上的酒。“味道也挺奇怪的，第一口下去好像是苹果的清香夹杂着焦糖的甜味，入喉之后留下的却是一    丝酸苦。真有点像那啥是吧。”女孩转头看向男生。    “啊？嗯……也许是这样的呢，我这杯酒和你描述的也差不多，不过感觉要烈一点？我感觉喝下去之后有点热….”男孩说着，手在脖子上打转。    “我看你又是老毛病犯了，酒精过敏了吧小趴菜，你还是别喝了”女孩说着要抢过男孩的酒杯。    “没有，你乱说，我才喝一口歪，你还是老样子喜欢乱说。”男生红着脸却依旧不松手，嘴里振振有词地说道。    “又不是外人，你还记得当初在班上上化学课的时候吗，老唐说你是缺少什么酶来着？乙醛脱氢酶？让你以后少喝酒，小心猝死，那我以后就没有前任咯。”女生嬉皮笑脸    地看着男孩眼睛。    “那岂不是正合你意？以后再谈，你就可以说实话啦，没有前任是吧”男生侧着脸，摇晃着酒杯，眼睛却不敢望向女孩。    “你说得对，那你多喝点儿吧小伙子，到时候看看是你先吃我的席还是我先吃你的席。”女生憋着笑看着男生。    “咋？最近有新情况了？”    “算了吧，狗都不谈感情。”    “欸，说起分开，我们到底是因为什么分开啊？”男孩若有所思的望向女生好像，想从她的口里得到那个答案。    “过去这么久了，真的还重要吗？”女孩避开了男生的眼神，露出漫不经心的表情。    不知道是这句话的原因还是因为时间太早 ，店里人本身也很少的原因，整个酒馆在女孩最后一个字说完的那刻没有再多余的声音。我隔了好一会儿才注意到气氛的微    妙。正准备走过去缓和一下气氛问他们需要点什么服务啥的时候她说话了。    “时间不早啦，我得走了，我室友还等着我回去给她们带吃的呢。”女孩拿起外套准备起身。    “嗯..那我们一起呗我送送你？”男生明显想多留一下她，有点着急的样子看向她。    “不用啦，我们也不顺路，那再见啦！”没有多余的话，女孩径直走出门，披着一头飘逸的长发就这样消失在了十字路口。男孩还没缓过神来，挺直的背一下变得瘫软了。    “小兄弟，别喝啦，再喝等会儿醉我这儿了小心。”我拍着他的背，想劝劝他。    “其实我也没有想过我们会有今天，周围的朋友也都很诧异，我甚至在想毕业了我就向她求婚。”男孩低着头转着手上的戒指。“七年啊，断断续续的七年，从我们第一次    遇见那是 14 岁到现在 22 岁，噢快 8 年了。但我们停在了第七年…….”男孩从他们第一次见面开始讲起-----    那是开学的第一天，经过一个假期的同学们都在教室里面聊着天分享着刚结束的那个夏天。“大家安静安静，听我说，回到各自座位上。”班主任走到讲台边，手扶了扶眼    镜    &quot;收作业的先停一下，接下来我要讲一件重要的事。这学期我们班有一位新的同学来到我们的班级，大家欢迎一下&quot;班主任刚说完，目光转向前门，招了招手，一位扎着    马尾女孩背着书包走了进来，她自信的迈着脚步。    “大家好，我叫玙小双，你们可以叫我小双，很高兴能够来到我们班和大家一起冲刺最后一年的学习生涯。”她微微一笑结束了自我介绍。    “那你就坐中间那儿，那个男生旁边，李煦那儿。”班主任指了指我的方向。 我细细打量着我这位同桌，小小的个子走起路来却十分的拽，眼神十分坚定。    “你好，我叫李煦，以后我们就是同桌了。”我用桌上的便利贴写下简短的话悄悄传给她。“好的。”简短的两个字的回复，我们的同桌生涯就这么开始了。    “快来看啊，快来看啊，这次第一居然不是李煦”同学们围着月考成绩榜小声交谈着。“屿小双！那个新转来的同学啊，真是没看出来这么厉害。”他们四处张望着寻找屿小    双的身影。而属于我原本的平静也被他们的话惊扰到。    “老郭，走陪我上个厕所”我走到好哥们儿身旁想把他拉出教室。    “啊？你怎么回事，居然有一天你李煦上厕所还要人陪啊？真是太阳打西边来了。”老郭停下手上的笔，起身跟在我身后。    “话真多啊你。”我双手插着兜，想赶快离开这个是非之地。没走多远，屿小双迎面朝我走来，手上好像拿着卷子，她看到我抬起头，摆着头故意瘪这嘴朝我笑了下有匆匆    跑回教室。    “欸，怎么回事啊你俩同桌，一个第一，一个第二，真有点神雕侠侣的感觉啊哈哈。”老郭不怀好意的看着我笑。    “你不要瞎起哄啊，这次纯考砸了，我到不信她下次还能排在我前面。”我难掩自己的尴尬解释着。    “得嘞，快回去了，马上打铃了，下节课老唐肯定要将成绩。你就等着被洗刷吧。”他一边跑回教室一边回头朝我比了个‘二‘的手势。    “叮铃铃铃~“    “相信大家已经看到了这次考试的成绩吧，新来的小双同学，第一场考试就考了第一，某些同学还是要警惕起来啊。当然大家也要像李煦和屿小双学习，他们同桌一个第    一，    一个第二…….“老唐话还没说完，下面一些同学就开始起哄了。我撇了一眼旁边的屿小双，她递过来一张便利贴”这位同学考第二也没什么大不了的，继续加油争取下次超    过我噢~    哈哈“，我看着看似安慰我的话抬起头撇了她一眼，很好贱贱的。    “现在会想起，我大概是从那时候就开始喜欢她了吧。我这个人就喜欢有挑战性的事，而她也是那么的耀眼。呵呵~“说着男孩儿又一口酒下肚。    “后来我们无论是考的好还是考的差都排在一起，老师家长都以为我们在谈恋爱，但其实当时我们都不知道什么是谈恋爱哈哈你说好不好笑。“男孩一边看着我一边给我生    动    的描述他脑海里的画面。    第一幕：久别之后    “老板，来两杯度数低一点的酒”。    走进店里的是一男一女，男孩略带羞涩的点了两杯酒，我一眼就看出来他们不是经常来喝酒的人。女孩坐在吧台面前转着自己的椅子，摇晃这面前的骰子。    “分开之后这些时间，过得怎么样？”男生的一句话打破了原先略显尴尬的气氛。    “噢？就那样呗，照样上课，按时吃饭，看看小说。”女孩低着头看着骰盅里面的点数，嘴里含糊这回答男孩。“你呢？不是计划着开始‘一路向北’旅游了吗，钱攒的怎么    样了？”女孩进入酒馆后第一次眼神落在男孩身上。    “那肯定啊，我这么厉害”男孩眼神躲闪着，嘴上却说着肯定的话。“啰，这是我给你准备的七周年礼物回去才看哦”说着他从脚边拿起一个礼品袋看样子是装着他准备好的    礼物。    女生见状也从身边拎出了一个口袋放在吧台上。他们交换了礼物。    “你们的酒好了，来，这杯是你的叫‘勇敢的心‘。”说着我轻轻的将这杯酒推到了男生面前。“这杯’美国往事‘是你的小姐。”我以同样的动作将酒送到女孩面前。我走到了    一    旁一边收拾着台面一边打望着这两个人。    “这个老板还挺有意思的，给这些酒取的名字。”女孩打趣地看着手上的酒。“味道也挺奇怪的，第一口下去好像是苹果的清香夹杂着焦糖的甜味，入喉之后留下的却是一    丝酸苦。真有点像那啥是吧。”女孩转头看向男生。    “啊？嗯……也许是这样的呢，我这杯酒和你描述的也差不多，不过感觉要烈一点？我感觉喝下去之后有点热….”男孩说着，手在脖子上打转。    “我看你又是老毛病犯了，酒精过敏了吧小趴菜，你还是别喝了”女孩说着要抢过男孩的酒杯。    “没有，你乱说，我才喝一口歪，你还是老样子喜欢乱说。”男生红着脸却依旧不松手，嘴里振振有词地说道。    “又不是外人，你还记得当初在班上上化学课的时候吗，老唐说你是缺少什么酶来着？乙醛脱氢酶？让你以后少喝酒，小心猝死，那我以后就没有前任咯。”女生嬉皮笑脸    地看着男孩眼睛。    “那岂不是正合你意？以后再谈，你就可以说实话啦，没有前任是吧”男生侧着脸，摇晃着酒杯，眼睛却不敢望向女孩。    “你说得对，那你多喝点儿吧小伙子，到时候看看是你先吃我的席还是我先吃你的席。”女生憋着笑看着男生。    “咋？最近有新情况了？”    “算了吧，狗都不谈感情。”    “欸，说起分开，我们到底是因为什么分开啊？”男孩若有所思的望向女生好像，想从她的口里得到那个答案。    “过去这么久了，真的还重要吗？”女孩避开了男生的眼神，露出漫不经心的表情。    不知道是这句话的原因还是因为时间太早 ，店里人本身也很少的原因，整个酒馆在女孩最后一个字说完的那刻没有再多余的声音。我隔了好一会儿才注意到气氛的微    妙。正准备走过去缓和一下气氛问他们需要点什么服务啥的时候她说话了。    “时间不早啦，我得走了，我室友还等着我回去给她们带吃的呢。”女孩拿起外套准备起身。    “嗯..那我们一起呗我送送你？”男生明显想多留一下她，有点着急的样子看向她。    “不用啦，我们也不顺路，那再见啦！”没有多余的话，女孩径直走出门，披着一头飘逸的长发就这样消失在了十字路口。    男孩还没缓过神来，挺直的背一下变得瘫软了。    “小兄弟，别喝啦，再喝等会儿醉我这儿了小心。”我拍着他的背，想劝劝他。    “其实我也没有想过我们会有今天，周围的朋友也都很诧异，我甚至在想毕业了我就向她求婚。”男孩低着头转着手上的戒指。“七年啊，断断续续的七年，从我们第一次    遇见那是 14 岁到现在 22 岁，噢快 8 年了。但我们停在了第七年…….”男孩从他们第一次见面开始讲起-----    那是开学的第一天，经过一个假期的同学们都在教室里面聊着天分享着刚结束的那个夏天。“大家安静安静，听我说，回到各自座位上。”班主任走到讲台边，手扶了    扶眼镜    &quot;收作业的先停一下，接下来我要讲一件重要的事。这学期我们班有一位新的同学来到我们的班级，大家欢迎一下&quot;班主任刚说完，目光转向前门，招了招手，一位扎着马    尾 女孩背着书包走了进来，她自信的迈着脚步。    “大家好，我叫玙小双，你们可以叫我小双，很高兴能够来到我们班和大家一起冲刺最后一年的学习生涯。”她微微一笑结束了自我介绍。    “那你就坐中间那儿，那个男生旁边，李煦那儿。”班主任指了指我的方向。 我细细打量着我这位同桌，小小的个子走起路来却十分的拽，眼神十分坚定。    “你好，我叫李煦，以后我们就是同桌了。”我用桌上的便利贴写下简短的话悄悄传给她。“好的。”简短的两个字的回复，我们的同桌生涯就这么开始了。    “快来看啊，快来看啊，这次第一居然不是李煦”同学们围着月考成绩榜小声交谈着。“屿小双！那个新转来的同学啊，真是没看出来这么厉害。”他们四处张望着寻找屿小    双的身影。而属于我原本的平静也被他们的话惊扰到。    “老郭，走陪我上个厕所”我走到好哥们儿身旁想把他拉出教室。    “啊？你怎么回事，居然有一天你李煦上厕所还要人陪啊？真是太阳打西边来了。”老郭停下手上的笔，起身跟在我身后。    “话真多啊你。”我双手插着兜，想赶快离开这个是非之地。没走多远，屿小双迎面朝我走来，手上好像拿着卷子，她看到我抬起头，摆着头故意瘪这嘴朝我笑了下有匆匆    跑回教室。    “欸，怎么回事啊你俩同桌，一个第一，一个第二，真有点神雕侠侣的感觉啊哈哈。”老郭不怀好意的看着我笑。    “你不要瞎起哄啊，这次纯考砸了，我到不信她下次还能排在我前面。”我难掩自己的尴尬解释着。    “得嘞，快回去了，马上打铃了，下节课老唐肯定要将成绩。你就等着被洗刷吧。”他一边跑回教室一边回头朝我比了个‘二‘的手势。    “叮铃铃铃~“    “相信大家已经看到了这次考试的成绩吧，新来的小双同学，第一场考试就考了第一，某些同学还是要警惕起来啊。当然大家也要像李煦和屿小双学习，他们同桌一个第    一，一个第二…….“老唐话还没说完，下面一些同学就开始起哄了。我撇了一眼旁边的屿小双，她递过来一张便利贴”这位同学考第二也没什么大不了的，继续加油争取下    次超过我噢~哈哈“，我看着看似安慰我的话抬起头撇了她一眼，很好贱贱的。    “现在会想起，我大概是从那时候就开始喜欢她了吧。我这个人就喜欢有挑战性的事，而她也是那么的耀眼。呵呵~“说着男孩儿又一口酒下肚。    “后来我们无论是考的好还是考的差都排在一起，老师家长都以为我们在谈恋爱，但其实当时我们都不知道什么是谈恋爱哈哈你说好不好笑。“男孩一边看着我一边给我生    动的描述他脑海里的画面。    “那后来呢，你们怎么在一起的？“我开始好奇他接下来的回忆。    “再后来，我们去了同一个高中，我学的理科，她选择了文科，我们之间的交际减少了许多，但是她经常来找我借我的数学笔记。哥们儿当时数学成绩可好了，每次考完    我的数学卷子都会在年级上展示，当然展示的都是复印件，原卷我总会留给她…..“他笑着描绘当初他的意气风发的模样。    “她文科看的懂你的卷子吗？“我问他。    “哼，你别看她是文科生，那个时候就很要强了，什么都想考第一，总会问我一些理科数学的方法拿去做她的文科题。太要强了，哈哈，在我们的感情里面也是……”说到最    后他的眼神又变的黯淡了些。    “你还没讲你们在一起的呢。”我推了下他的手，想让他继续往下讲。我从一旁倒了一杯牛奶给他。    “哈哈谢谢，我真没有醉。”他咕噜咕噜几口喝了下去。    “当时我和她都是走读，有一段时间我早上很早就自然醒了，去学校居然发现有比我还早到校的学生！我一看发现就是她，果然应证了那句话比你聪明的人还比你努力。    意外    发现她这个习惯之后，那段时间我就起的很早，想和她在校门多说会儿话。”他一边说一边沉浸在他的脑海里。    “冬天天亮得很晚，那个时候我骑着我的车，在车轮上按了那种彩色的灯一闪一闪的转起来超酷，我故意等到她过路口的时候从她面前路过，当然我的双手在我的包包里    面哈哈哈，至少在那个时候我觉得我很酷。”他笑着给我模仿他双手插兜骑车的样子，真别提有多二了。“更搞笑的是，后来我问她哥们儿酷不酷的时候，你知道她咋说    吗，她 说她压根儿没注意到我，她早上走路的时候在背书。”我和他都笑了。    “哈哈哈你小子还真玩孔雀开屏那套啊”我拍着他的肩膀笑着他。    “谁说不是呢，现在想起来都觉得尴尬。那时候太二了。那时候我们会教学楼天台一起看日出，我还记得就是那天，圣诞节前一天，噢对平安夜那天，她在天台给了我一    个苹果，那天她很特别，眼睛扭扭捏捏的看着我，我就问她‘看日出啊，老是瞟我干嘛？‘她好像被我说的不好意思了，别管了那时候太直男了，天透亮了，她从她校服口    袋里摸出了一封信给我，然后转身就跑走了。“他眯着眼睛开始回想。    “不知道从何说起，每次从你们班路过总会瞟一眼，看到你认真埋头写作业的背影让我觉得很心安。从前我总是一个人早早的在校门口等着，但后来有你陪着我，我……我    不知    道怎么了，最近总看到你和你后桌的女生说话，我心里很不舒服，上课会想，走路也会想，甚至睡觉的因为这件事情辗转反侧难以入眠。我想，我可能喜欢上你了李煦，    如果你不    喜欢我，你有喜欢的人，你就把这封信撕碎然后扔了，一定要撕碎！那如果你喜欢我……..”    “我给你讲哦，我当时别提有多开心了，这个傻瓜当时还觉得我喜欢我后桌那个女生哈哈哈”他笑着给我描述当时的场景，好像很得意的样子。    “那天下午放学，我像往常一样去骑车，结果她在外面等着我。我推车从她旁边走过，我当时也不知道怎么和他说嘛第一次这样挺紧张的其实。然后她就拉住了我的外    套。”    “所以，你对我什么感觉呢现在？”屿小双抿着嘴唇地看着我。    我看的出来了她有点不好意思，我心里想“哈哈哈哈哈，你也有今天啊屿小双，你也会有不好意思的时候。”    “做我女朋友吧。”我看着她的眼睛一动不动。    “啊？这样吗？好我答应你！”她脸上露出了笑容。    “莫名其妙明明是她给我表的白，变成了她答应我了，便宜都给他占完了。”我当时心想啊。    “那，李煦同学明天早上也会陪我看日出吗？”她跑到我车前回头看着我。    “啊？哈哈看心情咯”我故意逗她。    那天明明是骑着自行车上学的，回家却一直在走路。我们一边走一边聊天………..    “所以，你们这样就在一起了？”我一副吃瓜的样子看着他。    “是啊，那是第一次谈恋爱，身边的朋友们都很羡慕我们，就连家长知道之后也没有拦着我们，只是让我们把学习放在第一位。”他的声音放松了很多，神情也变得缓和起    来，看样子是比刚刚好点儿了吧。    “这场恋爱就像拔河，越到后面，我们都希望对方爱自己多一点，拼命想要赢得比赛，但是我忘了，在绳子的另一端对方先放手了，你只会摔得头破血流，我在这个梦里    沉睡了七年，醒过来的时候她已经到达彼岸，而我却不知身在何方。”他低沉的声音带我走进了那段些回忆…….    “我以前很喜欢你的。12 年高中毕业之后，我一个人来了成都，你选择呆在重庆，那段时间真是最灰暗的日子了。大一刚进校每天晚自习下课已经是 10 点钟了，一个人    回寝室，我一个人走在人行道最边上，唱歌给自己解闷，也常常默默地想你又在干什么。有一天我看到你发说说，我以为你背着我和其他女生出去玩了。那一瞬间真是干    净脑袋轰的一下要炸开了，懵了有好一会儿，你怎么可以背着我和其他女生出去玩呢，那天晚上给你打电话，却没有耐心听你的解释，我们爆发了第一次争吵，你说我像    煤气罐一样易燃易爆炸。那是我第一次体会到男人的嘴，骗人的鬼，你从前说过会包容的我的一切的。后来你的每条说说我都会看，但是再也不要给你点赞和评论了！    大二的时候，我没有住校了，我住在姑妈家里。他们睡得早，十点半之后就只剩我一个人坐在客厅里看书了，那么空旷只有一盏灯开着。有时候坐累了我就趴在桌子上闭    眼睛休息会儿，但常常还是想你，想我们下次见面是多久，我们可以去哪儿玩？你还记得吗有一天我们在打电话你说你在听西城男孩的歌，我告诉你我也在听，那时候我    真的觉得我们最有默契了!    你总说那段时间我喜怒无常经常删你，其实我都好几次想要放弃了，我不想再每天闲下来的时候都很想你但又见不到你了，不想在因为你的一条条信息反复读几次了。我    感觉你怎么不知道我在想什么呢，把你删了难道不知道来哄哄我吗，你是直男还是不喜欢我了呢？    但是每次你的好友申请发来我还是狠不下心来拒绝。有次十九分钟好友申请就过来了，搞得我怀疑删人还有好友通知呢。    你还记得你 14 年生日是在星期几吗？我记得是星期六，因为那天我掐着 3 点 24 分给你发生日快乐。那天早早给你说了晚安，你小子没想到吧，我一边听着蒲公英的    约定一边在沙发上盖着厚厚的一床被子玩手机。到了凌晨一点实在太晚了，我不想浪费电，我就把家里的灯都关了，就那么一小部手机配到我凌晨 2 点，但是实在太困    了，我把手机放在电视机下充电，循环播放着西城男孩的《Nothing gonna change my love for you》。稍稍清醒了又拔下来继续等，我设了个 3 点 21 分的闹钟便    稍稍休息了下.3 点 21 分闹钟响了，我码字等着，没想到因为实在太困了居然把消息发到了同学的群里，最后给你发的时间是 3 点 25 分。    ……….    七年啊，这七年我几乎天天都想着你，我不知道自己是怎么做到的。我省略了那么多的事，那么多我想你的心理路程，还是写了这么多字。中途好几次，想起那些过去，    喉咙都紧的厉害，眼睛也酸胀感觉眼泪已经蓄势待发。毕竟那些纠结，心酸，思念，放不下还有被一条条消息牵着这神经的感觉，一天天累积起来，又岂是文字可以说尽    的，你说我很少说起想你，因为没有你在身边的日子我已经习惯了。    你说我太不负责了，如此草草的就要结束我们七年的感情，可是你又曾懂过这七年我内心的想法，我不负责，偶尔想起还是觉得你是太过理智？还是就不曾喜欢过…….    在一起的时候我想要的太多了，我想你大小事任何事都让着我。我很容易悲观，总是喜欢往最坏的方向想，所以还是会没有安全感。只有你无条件的迁就，我才会觉得你    真的也很喜欢我吧。以至于我后来变得越来越无理取闹了，因为我真的想要你的多哄哄我。每次你一丁点的不耐烦，一句不太重的重话，还有吵架，还有家里的原因都让    我不停的内耗，到最后六年的感情竟也在一年的时间内消耗殆尽。    最开始分手的分手的那几天，有时候还在想要不要复合。但是翻翻分手晚上手机里的讯息，我又清醒过来，回想着那些感受和心情，我们真的不合适吧大概，分手会淡化    一些矛盾，但不代表那些矛盾消失。不知道过了这些日子你会怎么想我呢，只是我也想让你知道这些年我都是真心喜欢你的，我甚至想好了如果能一直走下去，我们就在    2017 年 9 月 9 日那天结婚吧，那天不仅是9.9 农历也是初九，多好的日子 999，代表长长久久。抱歉，浪费你七年的时光，希望我们向前走吧，祝你我都会遇到正确    的人   ----小双”    李煦强忍着泪水读完了一整封信，我问他你送的七周年礼物是什么？    “她最喜欢的拼图，上次我们旅游的时候她教我玩拼图，一开始总是找不对拼图，要不是大小不一样要么就是形状不一样。”他哽咽着。    “我想，人生就像拼图一样吧，我们从在一起到今天一直在拼着各自的拼图，结果发现我们没法组合成更大的拼图…….”他说完从礼品袋里掏出一条围巾上面是一张便利    贴。    “外面风大，围着它吧，我给你的周年礼物。”</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> shuoshuo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前言</title>
      <link href="/2023/05/04/%E5%89%8D%E8%A8%80/"/>
      <url>/2023/05/04/%E5%89%8D%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<p>小邮 -李萧<br>前言</p><p>来到这座城市已经有了 10 个年头了，每天有数以万计的年轻人追逐梦想来到这里，</p><p>也有数以万计的人离开这座他们熟悉的城市。而我大概是会一直待在这种城市吧。08 年的时候我大学毕业，没有选择继续读研，进入社会工作是我当时唯一的出路了好像，记不清了害。只记得当时意气风发，和朋友谈笑间总是无意的表露出心中的心高气傲。<br>“老李，马上毕业了，你工作单位找好了吗？一天天也没见你着急”，嘴里一边吃着油条一边嘟囔着的人是我的室友小程。我们在学校外面早餐摊吃着早餐。我坐着小板凳上，望着还没亮的天发呆。</p><p>“喂，问你呢想啥呢”他用膝盖碰了碰我的膝盖。“啊？噢噢我啊，我自然是去最大的互联网公司挣最多的钱啦，再买一套三室一厅，娶个肤白貌美老婆，再生个女儿给你当妹妹，好大儿你觉得如何？”<br>我向他描绘着我脑袋里的蓝图，他果然十分欣喜的笑道“滚啊，就你四年挂的科比我谈的对象加起来还多。”，“你好意思是吧，大半夜把我叫出来喝酒说全是美女，结果是和你前任一起喝，你小子是<br>真不害臊啊”我给了他脑袋当头一“掌”。 “自己和前女友潇洒，喊我来帮你挡酒，真有你这么坑兄弟的”我不爽的看着他。“得了得了，这对早饭我请你好了吧，不气啦，下次我帮你，乖~臭宝儿”他摸着我的肩膀试图享用一顿饭就打发我，</p><p>“yue，别这样我才吃的早饭大哥。”我嫌弃的准备起身离开。“老板，钱给你放桌子上了啊~”他匆忙的结了帐从后面朝我跑了过来。一阵清风吹过，挑起了他的刘海，好吧清晨第一缕阳光撒在了他的脸<br>上，我承认小程是当时学校里面众多女生爱慕的对象，一字眉，长着一双杏眼，好似看什么都在放光一样。一米八几的个子好像在哪儿都是人群中的焦点。可能有些时候漂亮的脸蛋的确很有用吧，我<br>好像没那么生他的气了。“歪！你小子还真跑啊，也不知道等等你的宝贝”他故作娇羞的样子真的很好笑，他左手拿着衣服右手搭在我的肩膀上。“哎呀，你身上好大一股烟味，别给我蹭上了真是”我<br>皱褶眉头看着他，假意想摆脱他的手臂。“真男人说这些，大不了回去好哥哥帮你洗” ，“滚滚…” ……… 那个时候的我怎么也不会想到，有一天会在这种城市的某一个角落开一家酒馆吧。忘了自我介绍，我叫李森尧，我总向别人介绍到我自己“木子李，森林的森，尧舜禹的尧”。今年是我毕业后的第 6 年，</p><p>开店的第五年，这家叫做“不二酒馆”的酒馆是我自己攒钱开的，起初呢还没有这家小店，我只是在路边摆着一个小摊子给一些路过的人做一杯特调，赚的呢也大部分是那些去旁边酒馆里面消费不起的<br>学生的钱。我看见他们坐在路边和好朋友谈着人生，谈着他们的生活我十分感慨，时常也会想起当初被小程拉着去喝酒的那些日子，哥们儿几个也没啥生活费当时，常常都是他蹭着别人的卡蹭着别人<br>的酒还带上我。我在这儿给这些曾经的“我们”做着便宜的特调，听着他们的故事，尽兴之时也会抱起吉他弹上两曲，时间久了，来喝酒的都是些回头客。“老李，你这个摊子会一直在吗，等我们以后<br>毕业了，这就成了我们的老地方，成了我们喝酒的不二选择了啊！”这些可爱的学生们总是会问着我这么一个相同的问题，而我的回答也永远是“我也舍不得你们呀，只要你们还记得起我这个小酒<br>摊，你们随时回来喝！我给你们打八折哈哈哈”我笑着说。其实大概当时的我也不清楚自己会不会一直留在这儿吧，我这么高傲的人怎么可能摆一辈子的摊呢！？后来就有了现在这个不到 20 平的<br>小酒馆，名字就叫“不二”。</p><p>在这家小小的酒馆里，每天并没有很多的顾客，相比那些躁动的 livehouse，“不二”是一家清吧，每天坚持来的是一位音乐学院的驻场小姐姐，起初是没有驻场的，一次她来一个人坐在吧台点了一杯酒，她说让我按照她说的配，“威士忌，格雷伯爵红茶，橙子，苦酒，香草糖浆”。起初我是没有注意到有啥不一样的，她的声音十分低沉看上去是一个人你来喝闷酒的。“你们男人是不是没一个好东<br>西？”她摇着酒杯眼睛盯着我的方向，突然的提问打断了我在擦杯子的手“啊？你在问我吗？”我抬头看着他，似乎看到她眼里若隐若现的泪光。“嗯哼”她轻哼到，“我不这么认为，因为我就是男人，我更赞同把这个疑问换成‘好男人是谁？’，那我一定会毫不犹豫的告诉你，是你面前这个帅气的老板”我开玩笑想着缓和一下气氛。“算了吧，开个酒吧每天泡的妞不知道有多少呢，别装纯情噢大<br>叔。”她轻蔑地笑着说。“那可真不巧，我开这家店还真是自娱自乐，可不是打着调酒当老板的名声在这儿招摇撞骗。还有我不叫大叔。没比你大几岁”我眼神上下打量着这个也许才被某位小男生伤过的“心碎女士”。“啊？我不信，你看你这家酒馆，人也没几个，你挣什么钱啊，怪冷清的。”她眼神环顾着我的小店，嘴里说个不停像是在举出小店里的各个缺点。“欸对，你说的是有理，但总会有像你一样想找个安静的地方一个人喝苦酒倒苦水的小毛孩儿啊，巧了我还就挣你们的钱，你说气不气。”我的胜负欲告诉我我要反击了！她好像真被我说的话“攻击”到了，喝了一大口酒，然后朝我摆了摆手说“这个味道不对，你不行，怎么这么苦呢”。我笑了笑继续擦着手上的杯子“有些人啊，心里苦，欸他怪你的酒，你说好笑不好笑”。“切，大叔，别的店都有驻场，你怎么不请驻场啊，你这怎么和别人抢生意啊。”她一边说一边拿着酒杯在店里四处晃悠。“咯，那个角落看到了吗，一把吉他，一架 架子鼓东西我都是有的。有时候店里没人我自己就自娱自乐，有时候<br>有些顾客有才艺的我也欢迎他们展示。”</p><p>我话音还没落，她就拿起了靠在墙边的吉他。“哒哒哒哒，那片笑声让我想起我的那些花儿，在我生命每个角落静静为我开着~”，我心里咯噔一下，想不到啊这位“心碎女士”居然能弹能唱的。“真的很少</p><p>有见到女孩子听朴树的歌噢，不错嘛没看出来还挺会噢。”我手扶着下吧撑在吧台上。“那当然，我可是音乐学院的！你知道的吧我们学院有多厉害！那个李宇春知道吧就是我们学校的，我的直系师<br>姐！“ 我只当她在开玩笑，她一边说，我一边点头，附和着她的每一句吹出来的牛，她也越来越起劲了。“大叔，这样，要不你请我给你当驻场，我保证你这家酒馆生意好起来，怎么样？”她摇晃着身<br>子，手在空中比划着，好像在规划着这一切，看到他一本正经的说着她所谓的那些计划，我差点忘了我才是老板！“别，我可没那个钱付你的演出费，你们这些学生就会狮子大开口，我夸夸你，也没<br>让你来啊切”我赶忙拒绝到，想到我的小本生意本就不好做，要是再加上个演出费我的心就纯在滴血了。“嗨呀，瞧你那紧张那怂样儿，你看我像那些‘心‘很黑的人吗”她心里的眼神开着我。她一说<br>我才认真打量她，披着一头长长的黑发，小小的鹅蛋脸，弯弯的柳叶眉，眼睛里透露出一种清澈的“愚蠢”一看就让人觉得好骗，怪不得被渣男伤透了心。“咳咳，你大几啊，我可是先说啊在我这<br>间’小庙‘，只能是很少的出场费噢”我小声对她说，心里想着她应该能懂我的不容易吧。“这样，以后我要是来喝酒你不收我钱怎么样，就作为我的出场费，然后我可以先试着给你带几场，毕<br>竟！我可是大忙人，未来的天才歌手喂，懂吧。”她嘴里说着傲娇的话，脸上早已控制不住洋溢出了贱贱的笑。“好嘛，那我们一言为定，你带你的朋友们来我也不收钱。”当时的我真没有多犹<br>豫。“够爽快啊大叔，那祝我们合作愉快”，就这样“不二”的第一个驻场歌手就这么诞生了，直到后来很长一段时间我们都相处的很融洽，“不二”也成了他和她好朋友们的秘密基地，越来越多<br>的学生喜欢来我们这儿喝酒了，小小的店快要坐不下了，还好那个夏天到来了，我们在“不二”门口也添置了一些桌位，他们没有嫌弃“不二”太小了，反倒是享受炎炎夏日午夜的清风。</p><p>“重新认识一下，我叫郭墨。”</p><p><img src="/img/gm.jpg" alt="Lena"></p>]]></content>
      
      
      
        <tags>
            
            <tag> shuoshuo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于小说</title>
      <link href="/2023/05/04/%E5%85%B3%E4%BA%8E%E5%B0%8F%E8%AF%B4blog/"/>
      <url>/2023/05/04/%E5%85%B3%E4%BA%8E%E5%B0%8F%E8%AF%B4blog/</url>
      
        <content type="html"><![CDATA[<pre><code># 这篇小说的初衷谈起这篇小说的初衷，大概是年初的时候在小伙伴的启发下有了这个想法，想在今年年完善一篇十万字的小说，而小说的环境是我个人比较喜欢的一种环境--小酒馆。我的想法是，将身边发生的一些趣事，可能是我身上的也有朋友身上的，将这些故事进行一些小说化，最终展现在大家的眼前。这篇小说的受众群体初步定位是身边的朋友。毕竟个人的文笔有限，精力有限，写不出来什么大作，只当做是朋友间的消遣。## 小说的名字小说的名字在我最后的斟酌下，打算用“小邮筒”来命名，起初是小说的名字我是订作“不二酒馆”的，不二这个名字是源于我看过的一部电影里面的一个卡通兔子，不过我忘记是什么电影了，感兴趣的可以我搜索一下。但是在我很长一段时间的考虑下，还是放弃了之前的名字，觉得还是太普通甚至有点俗气了。而我也将小说的题材改变了。改名“小邮筒”，我是打算将这篇小说写成一篇类似于快穿？的一种小说吧。## 小说的背景前期故事背景还是以主人公以及小酒馆进行展开，在后期会随着发展需求，引入主线，“小邮筒”的出现。会有不同的人物出现，形成简短的小故事。</code></pre><hr><h2 id="小说的人物"><a href="#小说的人物" class="headerlink" title="小说的人物"></a>小说的人物</h2><p>因为这篇小说是一点点写出来的，每个故事只是有大概的雏形，所以对人物名称并没有全部一次性命名成功。所以我打算采用间断更新的方式，对小说的人物列表进行更新，写到哪一章就将人物更新到哪一章节。</p><blockquote><p><font color=Blue>主人公 -酒馆老板-李森尧</font> &gt; <font color=Blue>室友 - 小程</font> &gt; <font color=Blue>第一幕男主角 - 李煦</font> &gt; <font color=Blue>第一幕女主角 - 小双</font> &gt; <font color=Blue>驻场 - 郭墨</font></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> shuoshuo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快排模板</title>
      <link href="/2023/03/04/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%BC%94%E7%A4%BA/"/>
      <url>/2023/03/04/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<!-- aplayer: true置顶 --><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[],<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> x = q[(l+r+<span class="number">1</span>)/<span class="number">2</span> ],i = l<span class="number">-1</span>,j = r+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;j)&#123;</span><br><span class="line">        <span class="keyword">do</span> i++ ;<span class="keyword">while</span>(q[i]&lt;x);</span><br><span class="line">        <span class="keyword">do</span> j-- ;<span class="keyword">while</span>(q[j]&gt;x);</span><br><span class="line">        <span class="keyword">if</span>(i&lt;j) <span class="built_in">swap</span>(q[i],q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">quick_sort</span>(q,l,j);</span><br><span class="line">    <span class="built_in">quick_sort</span>(q,j+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">quick_sort</span>(q, <span class="number">0</span> , n<span class="number">-1</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>进入小李的世界吧！</title>
      <link href="/2022/11/17/%E8%BF%9B%E5%85%A5%E5%B0%8F%E6%9D%8E%E7%9A%84%E4%B8%96%E7%95%8C%E5%90%A7%EF%BC%81/"/>
      <url>/2022/11/17/%E8%BF%9B%E5%85%A5%E5%B0%8F%E6%9D%8E%E7%9A%84%E4%B8%96%E7%95%8C%E5%90%A7%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<h1 id="The-World-of-Surely"><a href="#The-World-of-Surely" class="headerlink" title="The World of Surely"></a>The World of Surely</h1><p>介绍：在 11 月 16 日的晚上整个网站搭建完毕，从开始学习到有一个能看的网站用了大概 2-3 天零零散散的课余时间，做这个网站的初衷是为了记录我的学习日常，还有就是我未来的方向大概就是网络安全了，而我的第一站就是 Web 前端的学习，搭建网站也是必不可少的一关。So，·11111111 接下来我会在这个网站上继续更新，也会分享一些有趣的事。</p><p>此时此刻已经是 17 日的凌晨了，距离秋十的是生日已经过了两个月，我也是在看时间的时候不经意的注意到了这一点，最近是繁忙又充实的一段时间，快到期末了，有很多事情、比赛要去做，我也有点担心，不过不重要了其他的一切，一步一个脚印就 OK 了。</p><h2 id="关于-Surely"><a href="#关于-Surely" class="headerlink" title="关于 Surely"></a>关于 Surely</h2><p>我的网站域名是<a href="http://www.surely916.love.surely是我的一个昵称,小李的谐音,是不是很有意思呢,他本来的意思也是踏实的一步一个脚印的,也很符合我想成为的样子,呵呵./">www.Surely916.love。Surely是我的一个昵称，小李的谐音，是不是很有意思呢，他本来的意思也是踏实的一步一个脚印的，也很符合我想成为的样子，呵呵。</a></p><hr><p>下面我就自己记点儿未来半个月要做的事，试试 markdown 的语法</p><p>1 .复习 java（前段时间忙着 c++的学习忽略了 java）</p><p>2 .完成数据结构的项目</p><p>3 .似乎记不起来了</p><p>4 . 数电！！！知识太多了得复习</p><p>5 . 准备蓝桥杯和传智杯的比赛？！也是很重要的事情！！！</p><p>ok 大概就这些先这样</p><blockquote><p>试用一下区块这个语法</p><p>相比于普通的文本录入，旁边的竖线让整体显得更高级了一点，也是有了一点分门别类的感觉</p></blockquote><p>试一下代码的插入，咳咳(随便传的)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Person</span>(string name, <span class="type">int</span> age)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;m_Age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    string m_Name;</span><br><span class="line">    <span class="type">int</span> m_Age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;Person&gt; v;</span><br><span class="line">    <span class="function">Person <span class="title">p1</span><span class="params">(<span class="string">&quot;aaa&quot;</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p2</span><span class="params">(<span class="string">&quot;bbb&quot;</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p3</span><span class="params">(<span class="string">&quot;ccc&quot;</span>, <span class="number">30</span>)</span></span>;</span><br><span class="line">    <span class="function">Person <span class="title">p4</span><span class="params">(<span class="string">&quot;ddd&quot;</span>, <span class="number">40</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向容器中添加数据</span></span><br><span class="line">    v.<span class="built_in">push_back</span>(p1);</span><br><span class="line">    v.<span class="built_in">push_back</span>(p2);</span><br><span class="line">    v.<span class="built_in">push_back</span>(p3);</span><br><span class="line">    v.<span class="built_in">push_back</span>(p4);</span><br><span class="line">    <span class="keyword">for</span> (vector&lt;Person&gt;::iterator it = v.<span class="built_in">begin</span>(); it != v.<span class="built_in">end</span>(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;姓名：&quot;</span> &lt;&lt; (*it).m_Name &lt;&lt; <span class="string">&quot;年龄 ：&quot;</span> &lt;&lt; (*it).m_Age &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>激动人心的时刻来了，接下来是尝试插入图片的语法，那么我会用什么图片呢？！</p><p>! <a href="https://tse4-mm.cn.bing.net/th/id/OIP-C.1kZBSgTYEJNKutwoLB4OsQHaHu?w=145&h=180&c=7&r=0&o=5&dpr=1.3&pid=1.7"> img</a></p><p>ps：这是创世之柱，最近网上很火的，据说是哈勃望远镜拍摄的 6500 光年外的鹰状星云内的一个照片，我感觉看上去很像一只巨大的手，神秘的！！</p><p>好啦，第一篇文章就到这里，一点三十七分！非常激动的结尾</p><p>By Surely</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
